<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penske.apps.suppliermgmt.dao.LoginDAO">

    <select id="getUserVendorFilterSelections" resultType="com.penske.apps.suppliermgmt.domain.UserVendorFilterSelection">
         SELECT orgMaster.ORG_ID,
                vendorFilter.VENDOR_ID,
                vendorFilter.IS_ACTIVE
          FROM SMC.SMC_VENDOR_FILTER vendorFilter
               INNER JOIN SMC.SMC_ORG_VENDOR_ASSOC vendorAssoc
               ON vendorAssoc.VENDOR_ID = vendorFilter.VENDOR_ID
               
               INNER JOIN SMC.SMC_ORG_MASTER orgMaster
               ON orgMaster.ORG_ID = vendorAssoc.ORG_ID
    
         WHERE vendorFilter.USER_ID = #{userId}
           AND orgMaster.PARENT_ORG_ID = 1 -- only loads orgs which have a parent equal to 1 (Penske) -- Dave Roth
  </select>
  
  <select id="getUserLoginHistory" resultType="UserLoginHistory">
       SELECT COUNT(*) AS loginCount,
              MIN(LOGIN_TIME) AS firstLoginDate,
              MAX(LOGIN_TIME) AS lastLoginDate
         FROM SMC.SMC_USER_LOGIN
        WHERE SSO = #{user.sso}
    </select>
  
  <insert id="putUserLogin">
        MERGE INTO 
                SMC.SMC_USER_LOGIN userLogin
            USING 
                
                (VALUES 
                    (
                        CAST(#{user.sso} AS VARCHAR(100)),
                        CAST(#{serverLocation} AS VARCHAR(30)),
                        CAST(#{loginDate} AS TIMESTAMP)
                    )
                ) temp (SSO, SERVER_LOCATION, LOGIN_TIME) 
            ON 
                temp.LOGIN_TIME - MICROSECOND (temp.LOGIN_TIME) MICROSECONDS = userLogin.LOGIN_TIME - MICROSECOND (userLogin.LOGIN_TIME) MICROSECONDS
                AND temp.SSO = userLogin.SSO

        WHEN MATCHED THEN
        
                UPDATE SET 
                
                    userLogin.SERVER_LOCATION = temp.SERVER_LOCATION,
                    userLogin.LOGIN_TIME = CURRENT_TIMESTAMP
                        
        WHEN NOT MATCHED THEN
        
                INSERT  (
                    SSO,
                    SERVER_LOCATION,
                    LOGIN_TIME
                )
                
                VALUES (
                    temp.SSO,
                    temp.SERVER_LOCATION,
                    CURRENT_TIMESTAMP
                )
    
    </insert>
		
</mapper>