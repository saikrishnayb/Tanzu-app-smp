{"version":3,"sources":["ritsu.js"],"names":["rules","_rules","getRuleByRuleClass","ruleClasses","Array","isArray","undefined","ruleToFind","some","ruleClass","_Rule","ruleType","validationFunction","errorMessageFunction","this","validate","getErrorMessage","_upsertValidationRule","errorMessageParam","Error","customErrorMessage","rule","ruleIndex","indexOf","splice","element","value","noSpace","hasAttribute","RegExp","replace","test","noThousandsSeparator","validNumericWhole","errorMessage","hasMinLimit","hasMaxLimit","getAttribute","decimalMax","validNumericDecimal","console","warn","$","datepicker","addValidationRule","ruleTypeOrRules","isRule","forEach","validation","_validateInput","validInput","type","userRegex","isAlpha","classList","contains","isNumeric","isFile","isRequired","fieldValue","isEmpty","trim","validationPattern","_validateAlphaField","_validateNumericField","_validateFileField","exception","_validateSelect","valueSelected","selectedIndex","options","validFile","simpleFileHash","noSimpleFileHash","files","length","validAlpha","elementClassString","elementClasses","split","validNumeric","fieldValueAsNum","Number","isNaN","minAttr","maxAttr","minLimit","maxLimit","validateElement","validElement","disabled","isInputOrTextarea","nodeName","isSelect","core","jQueryIsPresent","jQuery","defaultOptions","useBootstrap3Stlying","autoMarkInvalidFields","autoShowErrorMessages","messageCallback","resetInitialFormValues","selector","_getSelectorAsElementArray","reduce","accumulator","push","isCheckbox","isRadio","intialValue","checked","newElement","cloneNode","removeAttribute","parentNode","replaceChild","markInvalidFields","errorElement","_getClosestParentByClass","add","remove","getErrorMessages","elementArray","errorMessages","_getErrorMessageForInput","showErrorMessages","messageCallbackProvided","isInvalid","_handlemessageCallback","_removeErrorMessage","invalidElement","formGroup","helpBlock","querySelector","hasHelpBlock","em","document","createElement","innerHTML","b","br","className","appendChild","insertBefore","firstChild","span","parentElement","elementId","label","htmlFor","get","prototype","slice","call","querySelectorAll","NodeList","HTMLCollection","containerInputs","concat","parent","removeChild","_defaultmessageCallback","version","initialize","validationRules","storeInitialFormValues","setAttribute","initialValue","name","size","getInitialFormValue","resetIntialFormValues","isFormDirty","isDirty","String","isValid","getErrorMessagesAsMap","errorMessageMap"],"mappings":"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","file":"ritsu.min.js","sourcesContent":["var rules = function rules() {\n\n  var _rules = [];\n\n  //Public Methods *************************************************************\n  var getRuleByRuleClass = function getRuleByRuleClass(ruleClasses) {\n\n    var notAnArray = !Array.isArray(ruleClasses);\n    if (notAnArray) return _rules[ruleClasses] === undefined ? null : _rules[ruleClasses];\n\n    var ruleToFind = null;\n    ruleClasses.some(function(ruleClass) {\n\n      if (_rules[ruleClass] === undefined) return false;\n\n      ruleToFind = _rules[ruleClass];\n      return true;\n\n    });\n\n    return ruleToFind;\n\n  };\n\n  var addValidationRule = function addValidationRule(ruleTypeOrRules, ruleClass, validationFunction, errorMessageParam) {\n\n    var isArray = Array.isArray(ruleTypeOrRules);\n    var isRule = typeof ruleTypeOrRules === 'object' && !isArray;\n\n    if (isArray || isRule) {\n\n      if (isRule) ruleTypeOrRules = [ruleTypeOrRules];\n\n      ruleTypeOrRules.forEach(function(rule) {\n        _upsertValidationRule(rule.ruleType, rule.ruleClass, rule.validationFunction, rule.errorMessage);\n      });\n\n    } else {\n      _upsertValidationRule(ruleTypeOrRules, ruleClass, validationFunction, errorMessageParam);\n    }\n  };\n\n  //Private Methods ************************************************************\n  var _Rule = function _Rule(ruleType, ruleClass, validationFunction, errorMessageFunction) {\n    this.ruleType = ruleType;\n    this.ruleClass = ruleClass;\n    this.validate = validationFunction;\n    this.getErrorMessage = errorMessageFunction;\n  };\n\n  var _upsertValidationRule = function _upsertValidationRule(ruleType, ruleClass, validationFunction, errorMessageParam) {\n\n    if (ruleType !== 'alpha' && ruleType !== 'numeric')\n      throw new Error('The rule type for a new validation rule must be either \"alpha\" or \"numeric\"');\n\n    if (typeof ruleClass !== 'string')\n      throw new Error('The rule class for a new validation rule is missing or is not of type string');\n\n    if (typeof validationFunction !== 'function')\n      throw new Error('The validation function for a new validation rule is missing or is not of type function');\n\n    if (errorMessageParam === undefined)\n      errorMessageParam = function defaultErrorMessage() { return 'Invalid value'; };\n\n    if (typeof errorMessageParam === 'string') {\n      var customErrorMessage = errorMessageParam;\n      errorMessageParam = function defaultCustomErrorMessage() { return customErrorMessage; };\n    }\n\n    //Remove exsiting rule if found\n    var rule = getRuleByRuleClass(ruleClass);\n    if (rule !== null) {\n      var ruleIndex = _rules.indexOf(rule);\n      _rules.splice(ruleIndex, 1);\n    }\n\n    _rules[ruleClass] = new _Rule(ruleType, ruleClass, validationFunction, errorMessageParam);\n\n  };\n\n  var _validateAlphaOnly = function _validateAlphaOnly(element) {\n\n    var value = element.value;\n    var noSpace = element.hasAttribute('data-no-space');\n\n    /*\n     * Any case insensitive Roman character with periods, dashes, and spaces (if allowed).\n     *\n     * e.g. cool | cool-beans | cool beans | beans.\n     */\n    var alphaOnlyRegexString = '^([A-Za-z@.-])+$';\n    var alphaOnlyRegex = new RegExp(alphaOnlyRegexString.replace(/@/g, noSpace ? '' : '\\\\s'));\n\n    return alphaOnlyRegex.test(value);\n  };\n\n  var _validateAlphaZip = function _validateAlphaZip(element) {\n    /*\n     * Matches all Canadian or American postal codes with different formats. For USA it is:\n     * any 5 digits followed optionally by an optional space or dash or empty string and any 4 digits after the optional\n     * space or dash. For Canada it is: certain capital letters (only one), any digit (only one), any capital letter (only one),\n     * optional space, any digit (only one), any capitol letter (only one), and and digit (only one).\n     *\n     * e.g. 19608 | 19608-8911 | A9C1A1 | A9C 1A1\n     *\n     */\n    return /(^\\d{5}([\\s-]?\\d{4})?$)|(^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} ?\\d{1}[A-Z]{1}\\d{1}$)/.test(element.value);\n  };\n\n  var _validateAlphaNumeric = function _validateAlphaNumeric(element) {\n\n    var value = element.value;\n    var noSpace = element.hasAttribute('data-no-space');\n\n    /*\n     * Any case insensitive Roman character, digit, and spaces (if allowed)\n     *\n     * e.g. Cool | C00l\n     */\n    var alphaNumericRegexString = '^([a-zA-Z0-9@]+)$';\n    var alphaNumericRegex = new RegExp(alphaNumericRegexString.replace(/@/g, noSpace ? '' : '\\\\s'));\n\n    return alphaNumericRegex.test(value);\n  };\n\n\n  var _validateAlphaEmail = function _validateAlphaEmail(element) {\n    /*\n     * One or more non space charater + literal '@', + One or more non space charater + literal '.' + One or more non space charater.\n     * It does not check tld and special chacter validity.\n     *\n     * e.g. a@a.a | bob@google.com | cool-beans@beans.com.uk | $#%@$%@$.com\n     */\n    return /^(\\S+@\\S+\\.\\S+)$/.test(element.value);\n  };\n\n\n  var _validateNumericWhole = function _validateNumericWhole(element) {\n\n    var value = element.value;\n    var noThousandsSeparator = element.hasAttribute('data-no-thousands-separator');\n    /*\n     *  A negative or non negative number with optional thousands commas\n     *\n     *  e.g. 54 | -54 | -54,000 | 54000\n     */\n    var validNumericWhole = /^-?(([\\d]{1,3}(,{1}[\\d]{3})*)|[\\d]+)$/.test(value);\n    if (noThousandsSeparator) validNumericWhole = validNumericWhole && value.indexOf(',') === -1;\n\n    return validNumericWhole;\n\n  };\n\n  var _getNumericWholeErrorMessage = function _getNumericWholeErrorMessage(element) {\n\n    var errorMessage = 'Enter a whole number';\n\n    var hasMinLimit = element.hasAttribute('min');\n    var hasMaxLimit = element.hasAttribute('max');\n\n    if (hasMinLimit && hasMaxLimit) {\n      errorMessage = errorMessage + ' from ' + element.getAttribute('min') + ' to ' + element.getAttribute('max');\n    } else if (hasMinLimit) {\n      errorMessage = errorMessage + ' greater or equal to ' + element.getAttribute('min');\n    } else if (hasMaxLimit) {\n      errorMessage = errorMessage + ' lesser or equal to ' + element.getAttribute('max');\n    }\n\n    return errorMessage;\n  };\n\n  var _validateNumericDecimalString = function _validateNumericDecimalString(element) {\n\n    var value = element.value;\n    var noThousandsSeparator = element.hasAttribute('data-no-thousands-separator');\n    var decimalMax = element.getAttribute('data-decimal-max');\n    if (decimalMax === null) decimalMax = 2;\n\n    /*\n     * A negative or non negative monetary amount with optional thousands commas and optional hundreds decimal place\n     *\n     * e.g. -54 | 54 | 54.00 | -54,544 | 54,544.54\n     */\n    var numericDecimalRegexString = '^-?((([\\\\d]{1,3}(,[\\\\d]{3})*)+(\\\\.[\\\\d]{1,decimalPlaces})?)|[\\\\d]+(\\\\.[\\\\d]{1,decimalPlaces})?)$';\n    var numericDecimalRegex = new RegExp(numericDecimalRegexString.replace(/decimalPlaces/g, decimalMax));\n\n    var validNumericDecimal = numericDecimalRegex.test(value);\n    if (noThousandsSeparator) validNumericDecimal = validNumericDecimal && value.indexOf(',') === -1;\n\n    return validNumericDecimal;\n  };\n  var _getNumericDecimalErrorMessage = function _getNumericDecimalErrorMessage(element) {\n\n    var errorMessage = 'Please enter a number';\n\n    var hasMinLimit = element.hasAttribute('min');\n    var hasMaxLimit = element.hasAttribute('max');\n\n    var maxDecimals = element.hasAttribute('data-decimal-max') ? element.getAttribute('data-decimal-max') : 2;\n    errorMessage += ' with ' + maxDecimals + ' decimal places max';\n\n    if (hasMinLimit && hasMaxLimit) {\n      errorMessage = errorMessage + ' and from ' + element.getAttribute('min') + ' to ' + element.getAttribute('max');\n    } else if (hasMinLimit) {\n      errorMessage = errorMessage + ' and greater or equal to ' + element.getAttribute('min');\n    } else if (hasMaxLimit) {\n      errorMessage = errorMessage + ' and lesser or equal to ' + element.getAttribute('max');\n    }\n\n    return errorMessage;\n  };\n\n  /**\n   * @deprecated Since v1.3.0. Use numeric-whole instead and specify a min/max on the element\n   */\n  var _validateNumericFullYear = function _validateNumericFullYear(element) {\n    /*\n       * A four digit number\n       *\n       * e.g. 1999 | 2010 | 0000\n       */\n    // eslint-disable-next-line no-console\n    console.warn(\n      'numeric-full-year has been deprecated since v1.3.0. Use numeric-whole instead and specify a min/max on the element'\n    );\n    return /^(\\d{4})$/.test(element.value);\n  };\n\n\n  var _getNumericFullYearErrorMessage = function _getNumericFullYearErrorMessage(element) {\n\n    var errorMessage = 'Please enter a 4 digit year';\n\n    var hasMinLimit = element.hasAttribute('min');\n    var hasMaxLimit = element.hasAttribute('max');\n\n    if (hasMinLimit && hasMaxLimit) {\n      errorMessage = errorMessage + ' from ' + element.getAttribute('min') + ' to ' + element.getAttribute('max');\n    } else if (hasMinLimit) {\n      errorMessage = errorMessage + ' greater or equal to ' + element.getAttribute('min');\n    } else if (hasMaxLimit) {\n      errorMessage = errorMessage + ' lesser or equal to ' + element.getAttribute('max');\n    }\n\n    return errorMessage;\n  };\n\n  var _validateNumericJqueryDatePicker = function _validateNumericJqueryDatePicker(element) {\n\n    var $element = $(element);\n    var isValid = $element.datepicker('getDate') !== null;\n\n    return isValid;\n  };\n\n  //Add default rules\n  _upsertValidationRule('alpha', 'alpha-only', _validateAlphaOnly, 'Only letters, spaces, hypens, and periods are allowed');\n  _upsertValidationRule('alpha', 'alpha-zip', _validateAlphaZip, 'Enter a valid zip code');\n  _upsertValidationRule('alpha', 'alpha-numeric', _validateAlphaNumeric, 'Enter only alphanumeric characters');\n  _upsertValidationRule('alpha', 'alpha-email', _validateAlphaEmail, 'Make sure the email is correct');\n\n  _upsertValidationRule('numeric', 'numeric-whole', _validateNumericWhole, _getNumericWholeErrorMessage);\n  _upsertValidationRule('numeric', 'numeric-decimal', _validateNumericDecimalString, _getNumericDecimalErrorMessage);\n  _upsertValidationRule('numeric', 'numeric-full-year', _validateNumericFullYear, _getNumericFullYearErrorMessage);\n  _upsertValidationRule('numeric', 'numeric-jquery-date', _validateNumericJqueryDatePicker, 'Please select a date from the date picker');\n\n  return {\n    getRuleByRuleClass: getRuleByRuleClass,\n    addValidationRule: addValidationRule\n  };\n\n};\n\n\n\nvar validation = function validation(rules) {\n\n  var validateElement = function validateElement(element) {\n\n    var validElement = true;\n\n    var isDisabled = element.disabled === true;\n    if (isDisabled) return validElement; //No need to validate just exit early\n\n    var isInputOrTextarea = ['INPUT', 'TEXTAREA'].indexOf(element.nodeName) > -1;\n    var isSelect = element.nodeName === 'SELECT';\n\n    if (isInputOrTextarea) validElement = _validateInput(element);\n    if (isSelect) validElement = _validateSelect(element);\n\n    return validElement;\n\n  };\n\n  //Private Methods ************************************************************\n  var _validateInput = function _validateInput(element) {\n\n    var validInput = true;\n\n    var isHidden = element.type === 'hidden';\n    if (isHidden) return validInput;\n\n    var isAlpha = element.classList.contains('alpha');\n    var isNumeric = element.classList.contains('numeric');\n    var isFile = element.type === 'file';\n    var isRequired = element.hasAttribute('required');\n\n    var fieldValue = element.value;\n    var isEmpty = fieldValue === undefined || fieldValue.trim() === '';\n\n    var validationPattern = element.getAttribute('pattern');\n\n    var hasValidationPattern = validationPattern !== null;\n    if (hasValidationPattern) {\n\n      if (isEmpty && !isRequired) return validInput;\n\n      var userRegex;\n\n      try {\n        userRegex = new RegExp(validationPattern, 'u');\n      } catch (exception) {\n        userRegex = new RegExp(validationPattern);\n      }\n\n      return userRegex.test(fieldValue);\n    }\n\n    var noValidationNeeded = isEmpty && !isRequired && !isFile; //Cant check value of file inputs like this, let the _validateFileField() do it\n    if (noValidationNeeded) return validInput;\n\n    if (isAlpha) validInput = _validateAlphaField(element);\n    if (isNumeric) validInput = _validateNumericField(element);\n    if (isFile) validInput = _validateFileField(element);\n    if (!isAlpha && !isNumeric && !isFile && isRequired) validInput = !isEmpty; //Anything is allowed, just can't be blank\n\n    return validInput;\n  };\n\n  var _validateSelect = function _validateSelect(element) {\n    //If nothing is selected or there is no options, make the value undefined to avoid a TypeError\n    var valueSelected = element.selectedIndex === -1 ? undefined : element.options[element.selectedIndex].value;\n    var isRequired = element.hasAttribute('required');\n    var isEmpty = valueSelected === undefined || valueSelected.trim() === '';\n\n    var validSelect = isEmpty && !isRequired || !isEmpty;\n\n    return validSelect;\n\n  };\n\n  var _validateFileField = function _validateFileField(element) {\n    var validFile = true;\n\n    var isNotRequired = !element.hasAttribute('required');\n    if (isNotRequired) return validFile; //We dont care at all if it is not required (we cant eve validate it)\n\n    var simpleFileHash = element.getAttribute('data-simple-file-hash');\n\n    var noSimpleFileHash = !(simpleFileHash !== null && simpleFileHash.trim() !== '');\n    var noFilesAttached = element.files.length === 0;\n\n    if (noFilesAttached && noSimpleFileHash) validFile = false;\n    return validFile;\n  };\n\n  var _validateAlphaField = function _validateAlphaField(element) {\n    var validAlpha = true;\n\n    var validationPattern = element.getAttribute('pattern');\n    var elementClassString = element.getAttribute('class');\n\n    var elementHasNoClasses = elementClassString === null || elementClassString === '';\n    if (elementHasNoClasses) return validAlpha; //No need to validate just exit early\n\n    var elementClasses = elementClassString.split(' ');\n\n    var rule = rules.getRuleByRuleClass(elementClasses);\n    if (rule === null) return validAlpha; //No rule found, so just exit\n\n    validAlpha = rule.validate(element);\n\n    return validAlpha;\n  };\n\n  var _validateNumericField = function _validateNumericField(element) {\n\n    var validNumeric = true;\n\n    var elementClassString = element.getAttribute('class');\n    var elementClasses = elementClassString ? elementClassString.split(' ') : ''; //In case there is no classes, make it empty strings for null safety\n\n    var rule = rules.getRuleByRuleClass(elementClasses);\n    if (rule !== null) validNumeric = rule.validate(element);\n\n    //If it is still valid, check min and max if it has any\n    if (validNumeric) {\n      /*\n       * I know javascript auto converts strings into numbers when using \"non stirct equality\" operators,\n       * but do this excplicity to show intention. (This is prob overkill idk)\n       *\n       * This won't work in locales that use commas as decimal places.\n       */\n      var fieldValueAsNum = Number(element.value.replace(',', ''));\n      if (Number.isNaN(fieldValueAsNum)) return validNumeric; //Not a number, just return\n\n      var minAttr = element.getAttribute('min');\n      var maxAttr = element.getAttribute('max');\n\n      var minLimit = (minAttr === '' || minAttr === null) ? null : Number(minAttr);\n      var maxLimit = (maxAttr === '' || maxAttr === null) ? null : Number(maxAttr);\n\n      var hasMinLimit = minLimit !== null;\n      var hasMaxLimit = maxLimit !== null;\n\n      if (hasMinLimit && hasMaxLimit) {\n        validNumeric = fieldValueAsNum >= minLimit && fieldValueAsNum <= maxLimit;\n      } else if (hasMinLimit) {\n        validNumeric = fieldValueAsNum >= minLimit;\n      } else if (hasMaxLimit) {\n        validNumeric = fieldValueAsNum <= maxLimit;\n      }\n    }\n\n    return validNumeric;\n  };\n\n  return {\n    validateElement: validateElement\n  };\n\n};\n\n\n\nvar core = function core(rules, validation) {\n\n  var version = '1.3.4';\n  var jQueryIsPresent = typeof jQuery !== 'undefined';\n  var defaultOptions = {\n    useBootstrap3Stlying: false,\n    autoMarkInvalidFields: true,\n    autoShowErrorMessages: false,\n    messageCallback: null\n  };\n\n  var initialize = function initilaize(options) {\n\n    var invalidOptions = typeof options !== 'object';\n    if (invalidOptions) throw new Error('Invalid options to initialize ritsu.js');\n\n    defaultOptions.useBootstrap3Stlying = options.useBootstrap3Stlying === undefined ? false : options.useBootstrap3Stlying;\n    defaultOptions.autoMarkInvalidFields = options.autoMarkInvalidFields === undefined ? true : options.autoMarkInvalidFields;\n    defaultOptions.autoShowErrorMessages = options.autoShowErrorMessages === undefined ? false : options.autoShowErrorMessages;\n\n    if (options.messageCallback === undefined) {\n      defaultOptions.messageCallback = null;\n    } else {\n      if (typeof options.messageCallback !== 'function') throw new Error('messageCallback is not a function');\n      defaultOptions.messageCallback = options.messageCallback;\n    }\n\n    var validationRules = options.validationRules;\n    if (validationRules !== undefined) rules.addValidationRule(validationRules);\n\n    return this;\n  };\n\n  var storeInitialFormValues = function storeInitialFormValues(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    elementArray.forEach(function(element) {\n\n      var isCheckbox = element.type === 'checkbox';\n      var isRadio = element.type === 'radio';\n      var isFile = element.type === 'file';\n\n      if (isCheckbox || isRadio) {\n        element.setAttribute('data-initial-value', element.checked);\n      } else if (isFile) {\n\n        var hasSimpleFileHash = element.getAttribute('data-simple-file-hash') !== undefined;\n\n        if (hasSimpleFileHash) {\n          element.setAttribute('data-initial-value', element.getAttribute('data-simple-file-hash'));\n          return true;\n        }\n\n        var hasFileAttached = element.files.length > 0;\n        var initialValue = hasFileAttached ? element.files[0].name + element.files[0].size : undefined;\n\n        element.setAttribute('data-initial-value', initialValue);\n\n      } else {\n        element.setAttribute('data-initial-value', element.value);\n      }\n\n    });\n\n    return this;\n  };\n\n  var getInitialFormValue = function getInitialFormValue(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n    if (elementArray.length === 0) return null;\n\n    return elementArray[0].getAttribute('data-initial-value');\n\n  };\n\n  var resetInitialFormValues = function resetInitialFormValues(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var initialValueElements = elementArray.reduce(function(accumulator, element) {\n\n      var hasInitialValue = element.hasAttribute('data-initial-value');\n      if (hasInitialValue) accumulator.push(element);\n\n      return accumulator;\n\n    }, []);\n\n    initialValueElements.forEach(function(element) {\n\n      var isCheckbox = element.type === 'checkbox';\n      var isRadio = element.type === 'radio';\n      var isFile = element.type === 'file';\n      var intialValue = element.getAttribute('data-initial-value');\n\n      if (isCheckbox || isRadio) {\n        element.checked = intialValue == 'true';\n      } else if (isFile) {\n\n        var newElement = element.cloneNode(true);\n        newElement.removeAttribute('data-initial-value');\n        newElement.removeAttribute('data-simple-file-hash');\n\n        element.parentNode.replaceChild(newElement, element);\n\n      } else {\n        element.value = intialValue;\n      }\n\n    });\n\n    return this;\n  };\n\n  var isFormDirty = function isFormDirty(selector) {\n\n    var isDirty = false;\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    elementArray.forEach(function(element) {\n\n      var noInitialValue = element.getAttribute('data-initial-value') === undefined;\n      if (noInitialValue) return true;\n\n      var isCheckbox = element.type === 'checkbox';\n      var isRadio = element.type === 'radio';\n      var isFile = element.type === 'file';\n\n      var valueChanged = false;\n\n      var intialValue = element.getAttribute('data-initial-value');\n\n      if (isCheckbox || isRadio) {\n        valueChanged = intialValue != String(element.checked); //Need to convert it to a string to properly compare, since JS does not convert string to boolean for us http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\n      } else if (isFile) {\n        var hasFileAttached = element.files.length > 0;\n        valueChanged = intialValue !== (hasFileAttached ? element.files[0].name + element.files[0].size : element.getAttribute('data-simple-file-hash'));\n      } else {\n        valueChanged = intialValue !== element.value;\n      }\n\n      //If one value has changed, mark the entire form dirty and return right away\n      if (valueChanged) {\n        isDirty = true;\n        return false;\n      }\n\n    });\n\n    return isDirty;\n  };\n\n  var validate = function validate(selector, messageCallback) {\n\n    var messageCallbackProvided = messageCallback !== undefined;\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var isValid = true;\n\n    elementArray.forEach(function(element) {\n\n      var invalidElement = !validation.validateElement(element);\n\n      if (defaultOptions.messageCallback !== null || messageCallbackProvided) {\n\n        if (messageCallbackProvided)\n          _handlemessageCallback(element, messageCallback, invalidElement);\n        else\n          _handlemessageCallback(element, defaultOptions.messageCallback, invalidElement);\n\n      }\n\n      //Sets the entire form to false, just because their was at least 1 invalid field\n      if (invalidElement) {\n        isValid = false;\n        element.setAttribute('data-invalid', true);\n      } else {\n        element.setAttribute('data-invalid', false);\n\n        //If there is no callback go ahead and de the default remove error message\n        if (defaultOptions.messageCallback === null && !messageCallbackProvided) _removeErrorMessage(element);\n      }\n\n    });\n\n    //If an messageCallback is provided use that always regardless of the \"auto\" settings\n    if (defaultOptions.messageCallback === null && !messageCallbackProvided) _defaultmessageCallback(elementArray);\n\n    return isValid;\n  };\n\n  var markInvalidFields = function markInvalidFields(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    elementArray.forEach(function(element) {\n\n      var errorElement = defaultOptions.useBootstrap3Stlying ? _getClosestParentByClass(element, 'form-group') : element;\n\n      //If the user is using bootstrap and does not have the input in a form-group for some reason\n      if (errorElement === null)\n        errorElement = element;\n\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n\n      if (isInvalid)\n        errorElement.classList.add('has-error');\n      else\n        errorElement.classList.remove('has-error');\n\n    });\n\n    return this;\n  };\n\n  var getErrorMessage = function getErrorMessage(selector) {\n\n    if (selector === undefined)\n      throw new Error('No selector passed in');\n\n    var errorMessages = getErrorMessages(selector);\n    return errorMessages[0] === undefined ? null : errorMessages[0];\n  };\n\n  var getErrorMessages = function(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var errorMessages = [];\n\n    elementArray.forEach(function(element) {\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n      if (isInvalid) errorMessages.push(_getErrorMessageForInput(element));\n    });\n\n    return errorMessages;\n\n  };\n\n  var getErrorMessagesAsMap = function getErrorMessagesAsMap(selector) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n\n    var errorMessageMap = {};\n\n    elementArray.forEach(function(element) {\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n      if (isInvalid) errorMessageMap[element] = _getErrorMessageForInput(element);\n    });\n\n    return errorMessageMap;\n\n  };\n\n  var showErrorMessages = function showErrorMessages(selector, messageCallback) {\n\n    var elementArray = _getSelectorAsElementArray(selector);\n    var messageCallbackProvided = messageCallback !== undefined;\n\n    var invalidElements = elementArray.reduce(function(accumulator, element) {\n\n      var isInvalid = element.getAttribute('data-invalid') === 'true';\n\n      if (defaultOptions.messageCallback !== null || messageCallbackProvided) {\n        _handlemessageCallback(element, messageCallbackProvided ? messageCallback : defaultOptions.messageCallback, isInvalid);\n      } else {\n        _removeErrorMessage(element); //Remove any previous old error messages\n      }\n\n      if (isInvalid) accumulator.push(element);\n\n      return accumulator;\n\n    }, []);\n\n    invalidElements.forEach(function(invalidElement) {\n\n      var errorMessage = _getErrorMessageForInput(invalidElement);\n      var formGroup = _getClosestParentByClass(invalidElement, 'form-group');\n\n      if (defaultOptions.useBootstrap3Stlying  && formGroup != null) {\n\n        var helpBlock = formGroup.querySelector('.help-block');\n\n        var hasHelpBlock = helpBlock !== null;\n\n        var em = document.createElement('em');\n        em.innerHTML = errorMessage;\n\n        var b = document.createElement('b');\n\n        if (hasHelpBlock) {\n\n          var br = document.createElement('br');\n          br.className = 'ritsu-error';\n\n          b.className = 'ritsu-error';\n          b.appendChild(em);\n          b.appendChild(br);\n\n          helpBlock.insertBefore(b, helpBlock.firstChild);\n        } else {\n\n          b.appendChild(em);\n\n          var span = document.createElement('span');\n          span.className = 'help-block ritsu-error';\n          span.appendChild(b);\n\n          invalidElement.parentElement.appendChild(span);\n        }\n\n      } else {\n\n        var elementId = invalidElement.getAttribute('id');\n\n        var label = document.createElement('label');\n        label.className = 'error-label';\n        label.htmlFor = elementId || '';\n        label.innerHTML = errorMessage;\n\n        var errorContainer = _getClosestParentByClass(invalidElement, 'form-group') === null ? invalidElement.parentElement : _getClosestParentByClass(invalidElement, 'form-group');\n\n        errorContainer.appendChild(label);\n\n      }\n\n    });\n\n    return this;\n  };\n\n  //Private Methods ************************************************************\n\n  // Return an empty array if nothing is found\n  var _getSelectorAsElementArray = function _getSelectorAsElementArray(selector) {\n\n    var isJquery = jQueryIsPresent ? selector instanceof jQuery : false;\n    if (isJquery) selector = selector.get();\n\n    var selectorUndefined = selector === undefined;\n    if (selectorUndefined) selector = Array.prototype.slice.call(document.querySelectorAll('input, textarea, select'));\n\n    var isStringSelector = typeof selector === 'string';\n    if (isStringSelector) selector = Array.prototype.slice.call(document.querySelectorAll(selector));\n\n    var isNodeListOrHtmlCollection = selector instanceof NodeList || selector instanceof HTMLCollection;\n    if (isNodeListOrHtmlCollection) selector = Array.prototype.slice.call(selector);\n\n    var isNotArray = !Array.isArray(selector);\n    if (isNotArray) selector = [selector];\n\n    var noElements = selector.length === 0;\n    if (noElements) return []; // return empty array to prevent kabooms in the console\n\n    var containerInputs = [];\n\n    selector.forEach(function(element) {\n\n      var isNotInputs = ['INPUT', 'TEXTAREA', 'SELECT'].indexOf(element.nodeName) === -1;\n\n      if (isNotInputs)\n        containerInputs = containerInputs.concat(Array.prototype.slice.call(element.querySelectorAll('input, textarea, select')));\n      else\n        containerInputs.push(element);\n    });\n\n    return containerInputs;\n  };\n\n  var _getClosestParentByClass = function _getClosestParentByClass(element, className) {\n\n    while (element) {\n\n      var parent = element.parentElement;\n\n      var isFormGroup = parent !== null && parent.classList.contains(className);\n      if (isFormGroup) return parent;\n\n      element = parent;\n\n    }\n\n    return null;\n\n  };\n\n  var _removeErrorMessage = function _removeErrorMessage(element) {\n\n    var parentElement = _getClosestParentByClass(element, 'form-group'); // TODO: might interfere with non bootstrap pages that have the same class.\n    if (parentElement === null) parentElement = element.parentElement;\n\n    if (parentElement === null) return; //still nothing to remove, just exit\n\n    var querySelector = defaultOptions.useBootstrap3Stlying ? '.ritsu-error' : '.error-label, .warning-label';\n\n    Array.prototype.slice.call(parentElement.querySelectorAll(querySelector)).forEach(function(element) {\n      element.parentElement.removeChild(element);\n    });\n\n  };\n\n  var _handlemessageCallback = function _handlemessageCallback(element, messageCallback, invalidElement) {\n    var errorMessage = invalidElement ? _getErrorMessageForInput(element) : null;\n    messageCallback(element, errorMessage);\n  };\n\n  var _defaultmessageCallback = function _defaultmessageCallback(selector) {\n\n    if (defaultOptions.autoMarkInvalidFields) markInvalidFields(selector);\n    if (defaultOptions.autoShowErrorMessages) showErrorMessages(selector);\n\n  };\n\n  var _getErrorMessageForInput = function _getErrorMessageForInput(element) {\n\n    var isDropdown = element.nodeName === 'SELECT';\n    if (isDropdown) return 'Please select an option'; //Selects do not have rules\n\n    var elementHasErrorMessageAttr = element.hasAttribute('data-error-message');\n    if (elementHasErrorMessageAttr) return element.getAttribute('data-error-message');\n\n    var errorMessage = 'Invalid Value';\n\n    var elementClassString = element.getAttribute('class');\n\n    var elementHasNoClasses = elementClassString === null || elementClassString === '';\n    if (elementHasNoClasses) return errorMessage; //Element has no classes for some reason, so no rule wil be found\n\n    var elementClasses = elementClassString.split(' ');\n\n    var rule = rules.getRuleByRuleClass(elementClasses);\n    if (rule !== null) errorMessage = rule.getErrorMessage(element);\n\n    return errorMessage;\n  };\n\n  return {\n    //For mocha tests temporarily\n\n\n    version: version,\n    rules: rules, //Access to the Rules API\n\n    initialize: initialize,\n    storeInitialFormValues: storeInitialFormValues,\n    getInitialFormValue: getInitialFormValue,\n    resetIntialFormValues: resetInitialFormValues, //DEPRECATED as of v1.2.3\n    resetInitialFormValues: resetInitialFormValues,\n    isFormDirty: isFormDirty,\n    validate: validate,\n    markInvalidFields: markInvalidFields,\n    showErrorMessages: showErrorMessages,\n    getErrorMessage: getErrorMessage,\n    getErrorMessages: getErrorMessages,\n    getErrorMessagesAsMap: getErrorMessagesAsMap\n\n  };\n\n};\n\n\n"]}