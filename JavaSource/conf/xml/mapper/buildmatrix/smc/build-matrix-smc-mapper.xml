<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penske.apps.buildmatrix.dao.BuildMatrixSmcDAO">

	<select id="getAllBuildHistory" resultType="com.penske.apps.buildmatrix.domain.BuildSummary">
		SELECT
			RUN_ID AS buildId,
	        UNIT_QTY AS quantity,
		    RUN_STATUS AS buildStatus,
	        starter.SSO as startedBySso,
	        starter.FIRST_NAME||' '||starter.LAST_NAME AS startedByName,
	        STARTED_DATE as startedDate,
	        submitter.SSO as submittedBySso,
	        submitter.FIRST_NAME||' '||submitter.LAST_NAME AS submittedByName,
	        SUBMITTED_DATE as submittedDate,
	        RUN_START_DATE as runStartDate,
	        RUN_END_DATE as runEndDate
		FROM SMC.OBM_RUN_SUMMARY runSummary
		LEFT JOIN SMC.SMC_USER_MASTER starter ON starter.SSO = runSummary.STARTED_BY
		LEFT JOIN SMC.SMC_USER_MASTER submitter ON submitter.SSO = runSummary.SUBMITTED_BY
	</select>
	
	<insert id="insertNewBuild" useGeneratedKeys="true" keyProperty="newBuild.buildId">
 		INSERT INTO SMC.OBM_RUN_SUMMARY (
 			RUN_STATUS,
 			UNIT_QTY,
 			STARTED_BY,
 			STARTED_DATE
 		) VALUES (
 			#{newBuild.buildStatus.code},
 			#{newBuild.quantity},
 			#{newBuild.startedBySso},
 			CURRENT TIMESTAMP
 		)
	</insert>
	
	<insert id="insertCroBuildRequest" >
 		INSERT INTO SMC.OBM_CRO_BUILD_REQUEST (
 			RUN_ID,
 			ORDER_ID,
 			DELIVERY_ID
 		) VALUES (
 			#{buildId},
 			#{order.orderId},
 			#{order.deliveryId}
 		)
	</insert>
	
	<update id="updateBuild">
		UPDATE SMC.OBM_RUN_SUMMARY
		SET
			UNIT_QTY = #{existingBuild.quantity},
		    RUN_STATUS = #{existingBuild.buildStatus},
	        SUBMITTED_BY = #{existingBuild.submittedBySso},
	        SUBMITTED_DATE = #{existingBuild.submittedDate},
	        RUN_START_DATE = #{existingBuild.runStartDate},
	        RUN_END_DATE = #{existingBuild.runEndDate}
	    WHERE
	    	RUN_ID = #{existingBuild.buildId}
	</update>

	<delete id="deleteCroBuildRequestsFromBuild">
	 	DELETE FROM SMC.OBM_CRO_BUILD_REQUEST
	 	WHERE RUN_ID = #{existingBuildId}
	</delete>

	<select id="getBuildSummary" resultType="com.penske.apps.buildmatrix.domain.BuildSummary">
		SELECT
			RUN_ID AS buildId,
	        UNIT_QTY AS quantity,
		    RUN_STATUS AS buildStatus,
	        starter.SSO as startedBySso,
	        starter.FIRST_NAME||' '||starter.LAST_NAME AS startedByName,
	        STARTED_DATE as startedDate,
	        submitter.SSO as submittedBySso,
	        submitter.FIRST_NAME||' '||submitter.LAST_NAME AS submittedByName,
	        SUBMITTED_DATE as submittedDate,
	        RUN_START_DATE as runStartDate,
	        RUN_END_DATE as runEndDate
		FROM SMC.OBM_RUN_SUMMARY runSummary
		LEFT JOIN SMC.SMC_USER_MASTER starter ON starter.SSO = runSummary.STARTED_BY
		LEFT JOIN SMC.SMC_USER_MASTER submitter ON submitter.SSO = runSummary.SUBMITTED_BY
		WHERE RUN_ID = #{buildId}
	</select>
	
	<select id="getCroOrderKeysForBuild" resultType="com.penske.apps.buildmatrix.domain.CroOrderKey">
		SELECT
			ORDER_ID as orderId,
 			DELIVERY_ID as deliveryId
		FROM SMC.OBM_CRO_BUILD_REQUEST
		WHERE RUN_ID = #{buildId}
	</select>
	
	<select  id="getDistrictProximity" resultType="com.penske.apps.buildmatrix.domain.DistrictProximity">
		SELECT   DISTRICT AS district,
		         TIER AS tier
		FROM     SMC.OBM_PLANT_PROXIMITY OPP
		WHERE    OPP.TIER = 1
	</select>
	
	<insert id="insertProximityValues">
	</insert>
	
	<select id="getAllBodyPlants" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixBodyPlant">
		SELECT
			PLANT_ID AS plantId,
			PLANT_MFR_CODE AS plantMfrCode,
			PLANT_MANUFACTURER AS plantManufacturer,
			PLANT_NAME AS plantName,
			PLANT_STATE AS state,
			PLANT_ZIP AS zip,
			PLANT_COUNTRY AS country,
			PLANT_CITY AS city,
			OFFLINE_START AS offlineStartDate,
			OFFLINE_END AS offlineEndDate
		from OBM_PLANTS
	</select>
	
	<select id="getPlantData" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixBodyPlant">
		SELECT
			PLANT_ID AS plantId,
			PLANT_MFR_CODE AS plantMfrCode,
			PLANT_MANUFACTURER AS plantManufacturer,
			PLANT_NAME AS plantName,
			PLANT_STATE AS state,
			PLANT_ZIP AS zip,
			PLANT_COUNTRY AS country,
			PLANT_CITY AS city,
			OFFLINE_START AS offlineStartDate,
			OFFLINE_END AS offlineEndDate
		from OBM_PLANTS
		WHERE PLANT_ID=#{plantId}
	</select>
	
	<update id="saveOfflineDates">
		UPDATE OBM_PLANTS 
		SET OFFLINE_START=#{offlineStartDate},
			OFFLINE_END=#{offlineEndDate}
		WHERE PLANT_ID=#{plantId}
	</update>
	
	<select id="getAllBuildMatrixAttributes" resultMap="buildmatrixAttributeMap">
		SELECT   ATTRIBUTE_ID AS attributeId,
		         ATTRIBUTE_NAME AS attributeName,
		         '' AS attributeType
		FROM     OBM_ATTRIBUTE
	</select>

	<resultMap id="buildmatrixAttributeMap" type="com.penske.apps.buildmatrix.domain.BuildMatrixAttribute" >
		<result property="attributeId"   	column="attributeId"/>
		<result property="attributeName" 	column="attributeName"/>
		<result property="attributeType" 	column="attributeType"/>
		<result property="attributeValue" 	column="attributeValue"/>
		<collection property="values" 		column="attributeId" select="getAttributeValues"></collection>
	</resultMap>

	<select id="getAttributeValues" resultType="string">
		SELECT   ATTRIBUTE_VALUE
		FROM     OBM_ATTRIBUTE_VALUE
		WHERE    ATTRIBUTE_ID=#{attributeId}
	</select>
	
	<select id="getAttributeDetails" resultMap="buildmatrixAttributeMap">
		SELECT   ATTRIBUTE_ID AS attributeId,
		         ATTRIBUTE_NAME AS attributeName,
		         '' AS attributeType
		FROM     OBM_ATTRIBUTE
		WHERE    ATTRIBUTE_ID=#{attributeId}
	</select>
	
	<update id="updateAttribute">
		UPDATE OBM_ATTRIBUTE SET ATTRIBUTE_NAME=#{attributeName}
		WHERE ATTRIBUTE_ID=#{attributeId}
	</update>
	
	<delete id="updateAttributeValues">
		DELETE
		FROM 	OBM_ATTRIBUTE_VALUE
		WHERE 	ATTRIBUTE_ID=#{attributeId}
		 <if test="values != null">
           	AND 	ATTRIBUTE_VALUE NOT IN 
		   	<foreach collection="values" item="value" separator="," open="(" close=")">#{value}</foreach>
         </if>
	</delete>
	
	<insert id="addAttribute">
		INSERT INTO 
 					SMC.OBM_ATTRIBUTE_VALUE 
 					(ATTRIBUTE_ID, ATTRIBUTE_VALUE)
 		VALUES 		(#{attributeId}, #{attributeValue})
	</insert>
	
 	<select id="getAllAttributeValues" resultType="String">
 		SELECT 
				TRIM(ATTRIBUTE_VALUE)
		FROM
				SMC.OBM_ATTRIBUTE_VALUE
		WHERE
				ATTRIBUTE_ID=#{attributeId} 
	</select>
	
	<resultMap type="com.penske.apps.buildmatrix.domain.BuildAttribute" id="BuildAttributeMap">
		<id column="ATTRIBUTE_ID"				property="attributeId" />
		<result column="ATTRIBUTE_KEY" 			property="attributeKey"/>
		<result column="ATTRIBUTE_NAME"   		property="attributeName"/>
		<result column="GROUP_KEY"  			property="groupKey"/>
		<result column="GROUP_DESCRIPTION"    	property="groupDescription"/>
		<result column="GROUP_ORDER"    		property="groupOrder"/>
		<collection property="attributeValues"			ofType="com.penske.apps.buildmatrix.domain.BuildAttributeValue" column="ATTRIBUTE_ID" resultMap="BuildAttributeValueMap" columnPrefix="VAL_" />
	</resultMap>
	
	<resultMap type="com.penske.apps.buildmatrix.domain.BuildAttributeValue" id="BuildAttributeValueMap">
		<id column="ATTRIBUTE_VALUE_ID"			property="attributeValueId" />
		<result column="ATTRIBUTE_VALUE"		property="attributeValue" />
		<result column="DEFAULT_VALUE"			property="defaultPercentage" />
		<result column="ITEM_ORDER"				property="itemOrder" />
	</resultMap>
	
	
	<select id="getAttributesForBuild" resultMap="BuildAttributeMap">
		SELECT
			attribute.ATTRIBUTE_ID,
			attribute.ATTRIBUTE_KEY,
			attribute.ATTRIBUTE_NAME,
			awardGroup.GROUP_KEY,
			awardGroup.GROUP_DESCRIPTION,
			awardGroup.GROUP_ORDER,
			val.ATTRIBUTE_VALUE_ID AS VAL_ATTRIBUTE_VALUE_ID,
			val.ATTRIBUTE_VALUE AS VAL_ATTRIBUTE_VALUE,
			COALESCE(awardDefs.DEFAULT_VALUE, 0 ) AS VAL_DEFAULT_VALUE,
			COALESCE(awardDefs.ITEM_ORDER, -1) AS VAL_ITEM_ORDER
		FROM SMC.OBM_ATTRIBUTE_VALUE val
		LEFT JOIN SMC.OBM_ATTRIBUTE attribute
			ON attribute.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_GROUP awardGroup
			ON awardGroup.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_DEFAULTS awardDefs
			ON awardDefs.ITEM_ID = val.ATTRIBUTE_VALUE_ID
		ORDER BY attribute.ATTRIBUTE_ID
	</select>
	
	<select id="getExcludedUnits" resultType="String">
		SELECT
			UNIT_NUMBER
		FROM SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
		WHERE RUN_YEAR = #{year}
	</select>
	
	<insert id="excludeUnits">
		INSERT INTO SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
 					(UNIT_NUMBER, RUN_YEAR)
 		VALUES
 			<foreach collection="excludedUnits" item="unit" separator="," open="" close="">
 				(#{unit}, #{year})
 			</foreach>
	</insert>
	
	<delete id="deleteExcludedUnits">
		DELETE FROM SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
		WHERE RUN_YEAR = #{year}
		AND UNIT_NUMBER IN (
			<foreach collection="excludedUnits" item="unit" separator="," open="" close="">
				#{unit}
			</foreach>
		)
	</delete>
</mapper>