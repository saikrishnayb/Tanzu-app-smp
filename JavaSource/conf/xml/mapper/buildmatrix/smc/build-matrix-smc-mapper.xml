<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penske.apps.buildmatrix.dao.BuildMatrixSmcDAO">
	
	<!-- District Proximity workflow -->

	<resultMap id="freightMileageMap" type="com.penske.apps.buildmatrix.domain.FreightMileage">
		<result property="plantId" column="plantId" />
		<result property="area" column="area" />
		<result property="areaDesc" column="areaDesc"/>
		<collection property="districts" column="{plantId=plantId,area=area}" select="getFreightMileageDistricts"></collection>
	</resultMap>

	<select id="getFreightMileageDistricts" resultType="hashmap">
		SELECT   OFM.DISTRICT AS districtValues,
				 OFM.DIST_DESC AS distDesc
		FROM     SMC.OBM_FREIGHT_MILEAGE OFM
		WHERE    OFM.PLANT_ID = #{plantId}
		AND      OFM.AREA = #{area}
	</select>

	<select id="getPlantProximity" resultType="com.penske.apps.buildmatrix.domain.PlantProximity">
		SELECT   proximity.PROXIMITY_ID as proximityId,
		         proximity.PLANT_ID as plantId,
		         proximity.TIER as tier,
		         proximity.DISTRICT as district,
		         mileage.DIST_DESC as distDesc
		FROM     SMC.OBM_PLANT_PROXIMITY proximity
		LEFT JOIN  SMC.OBM_FREIGHT_MILEAGE mileage 
			ON mileage.PLANT_ID = proximity.PLANT_ID 
			AND proximity.DISTRICT = mileage.DISTRICT
		WHERE  proximity.PLANT_ID = #{plantId}
	</select>

	<select id="getFreightMileageData" resultMap="freightMileageMap">
		SELECT   OFM.PLANT_ID AS plantId,
		         OFM.AREA AS area,
		         OFM.AREA_DESC AS areaDesc
		FROM     SMC.OBM_FREIGHT_MILEAGE OFM
		JOIN 	 SMC.OBM_REGION_PLANT_ASSOCIATION reg 
				 ON reg.PLANT_ID = OFM.PLANT_ID AND reg.REGION =  OFM.REGION
		WHERE    OFM.AREA <![CDATA[<>]]> ''
		AND      OFM.PLANT_ID = #{plantId}
		GROUP BY OFM.AREA, OFM.PLANT_ID ,OFM.AREA_DESC
		ORDER BY OFM.AREA
	</select>

	<update id="saveDistrictProximity">
		MERGE INTO SMC.OBM_PLANT_PROXIMITY AS proximity USING
		(
		VALUES
		<foreach collection="plantProximityData" item="data" separator="," >
			(
				CAST(#{data.plantId} AS INTEGER),
				CAST(#{data.tier} AS INTEGER),
				CAST(#{data.district} AS VARCHAR(10))
			)
		</foreach>
		)
		AS input
		(
			PLANT_ID,TIER,DISTRICT
		)
		ON proximity.PLANT_ID=input.PLANT_ID AND proximity.TIER=input.TIER AND
		proximity.DISTRICT=input.DISTRICT
		WHEN MATCHED THEN DELETE
		WHEN NOT MATCHED THEN
		INSERT
			(
			PLANT_ID,
			TIER,
			DISTRICT
			)
		 VALUES
			(
			input.PLANT_ID,
			input.TIER,
			input.DISTRICT
			)
	</update>
	
	<!-- Plant Maintenance workflow -->
	<resultMap id="bodyplantResultmap" type="com.penske.apps.buildmatrix.domain.BuildMatrixBodyPlant">
		<result property="plantId" column="plantId" />
		<result property="plantMfrCode" column="plantMfrCode" />
		<result property="plantManufacturer" column="plantManufacturer" />
		<result property="plantName" column="plantName" />
		<result property="state" column="state" />
		<result property="zip" column="zip" />
		<result property="country" column="country" />
		<result property="city" column="city" />
		<collection property="offlineDates" column="{plantId=plantId}" select="getPlantOfflineDates"></collection>
	</resultMap>
	
	<select id="getAllBodyPlants" resultMap="bodyplantResultmap">
		SELECT
			PLANT_ID AS plantId,
			PLANT_MFR_CODE AS plantMfrCode,
			PLANT_MANUFACTURER AS plantManufacturer,
			PLANT_NAME AS plantName,
			PLANT_STATE AS state,
			PLANT_ZIP AS zip,
			PLANT_COUNTRY AS country,
			PLANT_CITY AS city
		FROM SMC.OBM_PLANTS
	</select>
	
	<select id="getPlantData" resultMap="bodyplantResultmap">
		SELECT
			PLANT_ID AS plantId,
			PLANT_MFR_CODE AS plantMfrCode,
			PLANT_MANUFACTURER AS plantManufacturer,
			PLANT_NAME AS plantName,
			PLANT_STATE AS state,
			PLANT_ZIP AS zip,
			PLANT_COUNTRY AS country,
			PLANT_CITY AS city
		FROM SMC.OBM_PLANTS
		WHERE PLANT_ID=#{plantId}
	</select>
	
	<select id="getPlantOfflineDates" resultType="com.penske.apps.buildmatrix.domain.PlantOfflineDate">
		SELECT
			OFFLINE_DATE_ID AS offlineDateId,
			PLANT_ID AS plantId,
			OFFLINE_START AS offlineStartDate,
			OFFLINE_END AS offlineEndDate
		FROM SMC.OBM_PLANTS_OFFLINE_DATES
		WHERE PLANT_ID=#{plantId}
	</select>
	
	<update id="saveOfflineDates">
		MERGE INTO SMC.OBM_PLANTS_OFFLINE_DATES AS offlineDates USING
		(
		VALUES
		<foreach collection="offlineDates" item="offlineDate" separator="," >
			(
				CAST(#{offlineDate.offlineDateId} AS INTEGER),
				CAST(#{offlineDate.plantId} AS INTEGER),
				CAST(#{offlineDate.offlineStartDate} AS DATE),
				CAST(#{offlineDate.offlineEndDate} AS DATE)
			)
		</foreach>
		)
		AS input
		(
			OFFLINE_DATE_ID,PLANT_ID,OFFLINE_START,OFFLINE_END
		)
		ON offlineDates.OFFLINE_DATE_ID=input.OFFLINE_DATE_ID 
		WHEN MATCHED THEN UPDATE SET offlineDates.OFFLINE_START= input.OFFLINE_START , offlineDates.OFFLINE_END= input.OFFLINE_END
		WHEN NOT MATCHED THEN
		INSERT
			(
			PLANT_ID,
			OFFLINE_START,
			OFFLINE_END
			)
		 VALUES
			(
			input.PLANT_ID,
			input.OFFLINE_START,
			input.OFFLINE_END
			)
	</update>
	
	<update id="removeOfflineDates">
		DELETE SMC.OBM_PLANTS_OFFLINE_DATES
		WHERE OFFLINE_DATE_ID IN
			<foreach collection="offlineDateToRemove" item="offlineDateId" separator="," open="(" close=")">#{offlineDateId}</foreach>
	</update>
	
	<select id="getRegionAssociationData" resultType="com.penske.apps.buildmatrix.domain.RegionPlantAssociation">
		SELECT
			DISTINCT mileage.REGION AS region,
			mileage.REGION_DESC AS regionDesc,
			reg.ASSOC_ID AS regionAssociationId,
			reg.PLANT_ID AS plantId,
			CASE WHEN reg.REGION <![CDATA[<>]]> '' AND reg.PLANT_ID = #{plantId}
				 THEN 'Y' 
				 ELSE 'N' 
			END as isAssociated
		FROM OBM_FREIGHT_MILEAGE mileage
			LEFT JOIN OBM_REGION_PLANT_ASSOCIATION reg 
			ON mileage.REGION = reg.REGION AND reg.PLANT_ID = #{plantId}
		WHERE mileage.REGION <![CDATA[<>]]> ''
		ORDER BY mileage.REGION
	</select>
	
	<select id="getAllRegionAssociationData" resultType="com.penske.apps.buildmatrix.domain.RegionPlantAssociation">
		SELECT
			DISTINCT mileage.REGION AS region,
			mileage.REGION_DESC AS regionDesc,
			reg.ASSOC_ID AS regionAssociationId,
			reg.PLANT_ID AS plantId,
			CASE WHEN reg.REGION <![CDATA[<>]]> ''
				 THEN 'Y' 
				 ELSE 'N' 
			END as isAssociated
		FROM OBM_FREIGHT_MILEAGE mileage
			LEFT JOIN OBM_REGION_PLANT_ASSOCIATION reg 
			ON mileage.REGION = reg.REGION
		WHERE mileage.REGION <![CDATA[<>]]> ''
		ORDER BY mileage.REGION
	</select>
	
	<update id="savePlantRegionAssociation">
		MERGE INTO SMC.OBM_REGION_PLANT_ASSOCIATION AS regionPlntAsso USING
		(
		VALUES
		<foreach collection="regionPlantAssociationData" item="data" separator="," >
			(
				CAST(#{data.plantId} AS INTEGER),
				CAST(#{data.region} AS VARCHAR(50))
			)
		</foreach>
		)
		AS input
		(
			PLANT_ID,REGION
		)
		ON regionPlntAsso.PLANT_ID=input.PLANT_ID AND regionPlntAsso.REGION=input.REGION
		WHEN MATCHED THEN DELETE
		WHEN NOT MATCHED THEN
		INSERT
			(
			PLANT_ID,
			REGION
			)
		 VALUES
			(
			input.PLANT_ID,
			input.REGION
			)
	</update>	<!-- PRODUCTION SLOT RESULTS -->
	<resultMap id="slotResultsMap" type="com.penske.apps.buildmatrix.domain.ProductionSlotResult" >
		<result column="runId"  				  property="runId"/>
		<result column="orderId"  				  property="orderId"/>
		<result column="unitNumber" 			  property="unitNumber"/>
		<result column="reservationStatus" 		  property="reservationStatus"/>
		<result column="programName"  			  property="programName"/>
		<result column="REGION"  				  property="region"/>
		<result column="AREA" 					  property="area"/>
		<result column="districtNumber" 		  property="districtNumber"/>
		<result column="districtName"  			  property="districtName"/>
		<result column="requestedDeliveryDate"    property="requestedDeliveryDate"/>
		<result column="productionSlot" 		  property="productionSlot"/>
		<result column="productionDate" 		  property="productionDate"/>
		<collection property="productionSlotList" column="{buildId=runId,unitNumber=unitNumber}" select="getProductionSlotList"></collection>
	</resultMap>
	
	<select id="getProductionSlotResults" resultType="com.penske.apps.buildmatrix.domain.ProductionSlotResult">
		SELECT
			SLOT_REQ.RUN_ID AS runId,
			SLOT_REQ.ORDER_ID AS orderId,
			SLOT_RESERVE.UNIT_NUMBER AS unitNumber,
			SLOT_RESERVE.VEHICLE_TYPE AS vehicleType,
			SLOT_RESERVE.RESERVATION_STATUS AS reservationStatus,
			SLOT_REQ.PROGRAM_NAME AS programName,
			MILEAGE.REGION AS region,
			MILEAGE.AREA AS area,
			SLOT_REQ.DESTINATION_DISTRICT AS districtNumber,
			SLOT_REQ.DESTINATION_DISTRICT_DESC AS districtName,
			SLOT_REQ.DESTINATION_DELIVERY_DATE AS requestedDeliveryDate,
			PLANT.PLANT_MFR_CODE ||'-' ||PLANT.PLANT_CITY ||',' ||PLANT.PLANT_STATE AS productionSlot,
			SLOT_DATES.SLOT_DATE AS productionDate,
			SLOT_RESERVE.CHASSIS_MAKE AS chassisMake,
			SLOT_RESERVE.CHASSIS_MODEL AS chassisModel,
			SLOT_RESERVE.CHASSIS_MODEL_YEAR AS chassisModelYear,
			SLOT_RESERVE.CHASSIS_COLOR AS chassisColor,
			SLOT_RESERVE.BODY_MAKE AS bodyMake,
			SLOT_RESERVE.CHASSIS_LENGTH AS chassisLength,
			SLOT_RESERVE.REAR_DOOR_MAKE AS rearDoorMake,
			SLOT_RESERVE.REEFER_MAKE AS reeferMake,
			SLOT_RESERVE.LIFTGATE_INSTALLED AS liftgateInstalled,
			SLOT_RESERVE.LIFTGATE_MAKE AS liftgateMake,
			SLOT_RESERVE.LIFTGATE_TYPE AS liftgateType
		FROM 
			SMC.OBM_RUN_SUMMARY RUN_SUMMARY
			JOIN SMC.OBM_SLOT_REQUEST SLOT_REQ
			    ON SLOT_REQ.RUN_ID=RUN_SUMMARY.RUN_ID
			JOIN SMC.OBM_SLOT_RESERVATION SLOT_RESERVE 
				ON SLOT_RESERVE.SLOT_REQUEST_ID = SLOT_REQ.SLOT_REQUEST_ID
			LEFT JOIN SMC.OBM_SLOTS SLOT 
				ON SLOT.SLOT_ID=SLOT_RESERVE.SLOT_ID
			LEFT JOIN SMC.OBM_PLANTS PLANT 
				ON PLANT.PLANT_ID = SLOT.PLANT_ID
			LEFT JOIN SMC.OBM_FREIGHT_MILEAGE MILEAGE 
				ON MILEAGE.PLANT_ID = PLANT.PLANT_ID AND MILEAGE.DISTRICT = SLOT_REQ.DESTINATION_DISTRICT
			LEFT JOIN SMC.OBM_SLOT_DATES SLOT_DATES 
				ON SLOT_DATES.SLOT_DATE_ID = SLOT.SLOT_DATE_ID
		WHERE
			 RUN_SUMMARY.RUN_ID=#{buildId}
		 AND
			 SLOT_RESERVE.UNIT_NUMBER <![CDATA[<>]]>''
	</select>
	
	<select id="getSlotResultsByFilter" resultMap="slotResultsMap">
		SELECT
			SLOT_REQ.RUN_ID AS runId,
			SLOT_REQ.ORDER_ID AS orderId,
			SLOT_RESERVE.UNIT_NUMBER AS unitNumber,
			SLOT_RESERVE.RESERVATION_STATUS AS reservationStatus,
			SLOT_REQ.PROGRAM_NAME AS programName,
			MILEAGE.REGION AS region,
			MILEAGE.AREA AS area,
			SLOT_REQ.DESTINATION_DISTRICT AS districtNumber,
			SLOT_REQ.DESTINATION_DISTRICT_DESC AS districtName,
			SLOT_REQ.DESTINATION_DELIVERY_DATE AS requestedDeliveryDate,
			PLANT.PLANT_MFR_CODE ||'-' ||PLANT.PLANT_CITY ||',' ||PLANT.PLANT_STATE AS productionSlot,
			SLOT_DATES.SLOT_DATE AS productionDate
		FROM 
			SMC.OBM_RUN_SUMMARY RUN_SUMMARY
			JOIN SMC.OBM_SLOT_REQUEST SLOT_REQ
			    ON SLOT_REQ.RUN_ID=RUN_SUMMARY.RUN_ID
			JOIN SMC.OBM_SLOT_RESERVATION SLOT_RESERVE 
				ON SLOT_RESERVE.SLOT_REQUEST_ID = SLOT_REQ.SLOT_REQUEST_ID
			LEFT JOIN SMC.OBM_SLOTS SLOT 
				ON SLOT.SLOT_ID=SLOT_RESERVE.SLOT_ID
			LEFT JOIN SMC.OBM_PLANTS PLANT 
				ON PLANT.PLANT_ID = SLOT.PLANT_ID
			LEFT JOIN SMC.OBM_FREIGHT_MILEAGE MILEAGE 
				ON MILEAGE.PLANT_ID = PLANT.PLANT_ID AND MILEAGE.DISTRICT = SLOT_REQ.DESTINATION_DISTRICT
			LEFT JOIN SMC.OBM_SLOT_DATES SLOT_DATES 
				ON SLOT_DATES.SLOT_DATE_ID = SLOT.SLOT_DATE_ID
		WHERE
			 RUN_SUMMARY.RUN_ID=#{buildId} 
		<if test="selectedFilters != null and selectedFilters.size > 0">
		 AND SLOT_RESERVE.RESERVATION_STATUS IN 
		<foreach collection="selectedFilters" item="id" separator="," open="(" close=")">#{id}</foreach>
		</if>
	</select>
	<select id="getProductionSlotList" resultType="String">
		SELECT 
					PLANT.PLANT_MFR_CODE ||'-' ||PLANT.PLANT_CITY ||',' ||PLANT.PLANT_STATE
		FROM 		SMC.OBM_PLANTS PLANT
		LEFT JOIN  	SMC.OBM_SLOT_RESERVATION_EXCEPTION RESERVE_EXCEPTION
		ON 			RESERVE_EXCEPTION.PLANT_ID = PLANT.PLANT_ID
		WHERE		RESERVE_EXCEPTION.RUN_ID = #{buildId} 
		AND			RESERVE_EXCEPTION.UNIT_NUMBER = #{unitNumber}
	</select>
	
	<select id="getAllPlants" resultType="String">
		SELECT 
					PLANT.PLANT_MFR_CODE ||'-' ||PLANT.PLANT_CITY ||',' ||PLANT.PLANT_STATE
		FROM 		SMC.OBM_PLANTS PLANT
	</select>
		
	<!--***** BUILD MATRIX WORKFLOW *****-->
	
	<!-- BUILD HISTROY -->
	<select id="getAllBuildHistory" resultType="com.penske.apps.buildmatrix.domain.BuildSummary">
		SELECT
			RUN_ID AS buildId,
	        UNIT_QTY AS quantity,
		    RUN_STATUS AS buildStatus,
	        starter.SSO as startedBySso,
	        starter.FIRST_NAME||' '||starter.LAST_NAME AS startedByName,
	        STARTED_DATE as startedDate,
	        submitter.SSO as submittedBySso,
	        submitter.FIRST_NAME||' '||submitter.LAST_NAME AS submittedByName,
	        SUBMITTED_DATE as submittedDate,
	        RUN_START_DATE as runStartDate,
	        RUN_END_DATE as runEndDate,
	        MAXIMUM_WEEKS_BEFORE_ALLOWED as maxWeeksBefore,
			MAXIMUM_WEEKS_AFTER_ALLOWED as maxWeeksAfter
		FROM SMC.OBM_RUN_SUMMARY runSummary
		LEFT JOIN SMC.SMC_USER_MASTER starter ON starter.SSO = runSummary.STARTED_BY
		LEFT JOIN SMC.SMC_USER_MASTER submitter ON submitter.SSO = runSummary.SUBMITTED_BY
		ORDER BY 
			(CASE WHEN buildStatus = 'P' THEN 0 ELSE 1 END), 
			(CASE WHEN buildStatus = 'S' THEN 0 ELSE 1 END), 
			(CASE WHEN buildStatus = 'R' THEN 0 ELSE 1 END), 
			(CASE WHEN buildStatus = 'F' THEN 0 ELSE 1 END), 
			buildId DESC
	</select>
	
	<!-- BUILD FUNCTIONS -->
	<insert id="insertNewBuild" useGeneratedKeys="true" keyProperty="newBuild.buildId">
 		INSERT INTO SMC.OBM_RUN_SUMMARY (
 			RUN_STATUS,
 			UNIT_QTY,
 			STARTED_BY,
 			STARTED_DATE,
 			MAXIMUM_WEEKS_BEFORE_ALLOWED,
			MAXIMUM_WEEKS_AFTER_ALLOWED
 		) VALUES (
 			#{newBuild.buildStatus.code},
 			#{newBuild.quantity},
 			#{newBuild.startedBySso},
 			CURRENT TIMESTAMP,
 			#{newBuild.maxWeeksBefore},
 			#{newBuild.maxWeeksAfter}
 		)
	</insert>
	
	<update id="updateBuild">
		UPDATE SMC.OBM_RUN_SUMMARY
		SET
			UNIT_QTY = #{existingBuild.quantity},
		    RUN_STATUS = #{existingBuild.buildStatus},
	        SUBMITTED_BY = #{existingBuild.submittedBySso},
	        SUBMITTED_DATE = #{existingBuild.submittedDate},
	        RUN_START_DATE = #{existingBuild.runStartDate},
	        RUN_END_DATE = #{existingBuild.runEndDate}
	    WHERE
	    	RUN_ID = #{existingBuild.buildId}
	</update>
	
	<select id="getBuildSummary" resultType="com.penske.apps.buildmatrix.domain.BuildSummary">
		SELECT
			RUN_ID AS buildId,
	        UNIT_QTY AS quantity,
		    RUN_STATUS AS buildStatus,
	        starter.SSO as startedBySso,
	        starter.FIRST_NAME||' '||starter.LAST_NAME AS startedByName,
	        STARTED_DATE as startedDate,
	        submitter.SSO as submittedBySso,
	        submitter.FIRST_NAME||' '||submitter.LAST_NAME AS submittedByName,
	        SUBMITTED_DATE as submittedDate,
	        RUN_START_DATE as runStartDate,
	        RUN_END_DATE as runEndDate,
	        MAXIMUM_WEEKS_BEFORE_ALLOWED as maxWeeksBefore,
			MAXIMUM_WEEKS_AFTER_ALLOWED as maxWeeksAfter
		FROM SMC.OBM_RUN_SUMMARY runSummary
		LEFT JOIN SMC.SMC_USER_MASTER starter ON starter.SSO = runSummary.STARTED_BY
		LEFT JOIN SMC.SMC_USER_MASTER submitter ON submitter.SSO = runSummary.SUBMITTED_BY
		WHERE RUN_ID = #{buildId}
	</select>
	
	<update id="submitBuild">
		UPDATE SMC.OBM_RUN_SUMMARY
		SET
			RUN_STATUS = #{status.code},
			SUBMITTED_BY = #{sso},
			SUBMITTED_DATE = CURRENT_TIMESTAMP
		WHERE
			RUN_ID = #{buildId}
	</update>
	
	<update id="updateBuildParams">
		UPDATE SMC.OBM_RUN_SUMMARY
		SET
			MAXIMUM_WEEKS_BEFORE_ALLOWED = #{summary.maxWeeksBefore},
			MAXIMUM_WEEKS_AFTER_ALLOWED = #{summary.maxWeeksAfter}
		WHERE
			RUN_ID = #{summary.buildId}
	</update>
	
	<!-- CRO BUILD REQUESTS -->
	<insert id="insertCroBuildRequest" >
 		INSERT INTO SMC.OBM_CRO_BUILD_REQUEST (
 			RUN_ID,
 			ORDER_ID,
 			DELIVERY_ID
 		) VALUES (
 			#{buildId},
 			#{order.orderId},
 			#{order.deliveryId}
 		)
	</insert>

	<delete id="deleteCroBuildRequestsFromBuild">
	 	DELETE FROM SMC.OBM_CRO_BUILD_REQUEST
	 	WHERE RUN_ID = #{existingBuildId}
	</delete>

	<select id="getCroOrderKeysForBuild" resultType="com.penske.apps.buildmatrix.domain.CroOrderKey">
		SELECT
			ORDER_ID as orderId,
 			DELIVERY_ID as deliveryId
		FROM SMC.OBM_CRO_BUILD_REQUEST
		WHERE RUN_ID = #{buildId}
	</select>
	
	<!-- AVAILABLE CHASSIS -->
	<select id="getExcludedUnitCount" resultType="int">
		SELECT
			COUNT(*)
		FROM SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
		WHERE RUN_YEAR = #{year}
	</select>
	
	<select id="getExcludedUnits" resultType="String">
		SELECT
			UNIT_NUMBER
		FROM SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
		WHERE RUN_YEAR = #{year}
	</select>

	<insert id="excludeUnits">
		INSERT INTO SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
 					(UNIT_NUMBER, RUN_YEAR)
 		VALUES
 			<foreach collection="excludedUnits" item="unit" separator="," open="" close="">
 				(#{unit}, #{year})
 			</foreach>
	</insert>

	<delete id="deleteExcludedUnits">
		DELETE FROM SMC.OBM_UNITS_EXCLUDED_FROM_BUILD
		WHERE RUN_YEAR = #{year}
		AND UNIT_NUMBER IN (
			<foreach collection="excludedUnits" item="unit" separator="," open="" close="">
				#{unit}
			</foreach>
		)
	</delete>
	
	<!-- BUSINESS AWARDS -->
	<insert id="insertBusinessAwards">
		INSERT INTO SMC.OBM_BUSINESS_AWARD
 				(RUN_ID, GROUP_KEY, AWARD_KEY, AWARD_KEY_ORDER, AWARD_PERCENTAGE, AWARD_QUANTITY, AWARD_TYPE)
 		VALUES
 			<foreach collection="awardsToInsert" item="award" separator="," open="" close="">
 				(#{award.buildId}, #{award.groupKey}, #{award.attributeValueKey}, #{award.awardOrder}, #{award.percentage}, #{award.quantity}, #{award.awardType})
 			</foreach>
	</insert>
	
	<delete id="deleteBusinessAwards">
		DELETE FROM SMC.OBM_BUSINESS_AWARD
 		WHERE RUN_ID = #{buildId}
	</delete>
	
	<select id="getBusinessAwards" resultType="com.penske.apps.buildmatrix.domain.BusinessAward">
		SELECT	
			RUN_ID as buildId,
			GROUP_KEY as groupKey, 
			AWARD_KEY as attributeValueKey, 
			AWARD_KEY_ORDER as awardOrder, 
			AWARD_PERCENTAGE as percentage, 
			AWARD_QUANTITY as quantity, 
			AWARD_TYPE as awardType
		FROM
			SMC.OBM_BUSINESS_AWARD
		WHERE RUN_ID = #{buildId}
	</select>
	<!-- OEM MIX MAINTENANCE -->
	<select id="getBusinessAwardDefaults" resultType="com.penske.apps.buildmatrix.domain.BusinessAwardDefault">
		SELECT	
			BUSINESS_AWARD_DEFAULT_ID as businessDefaultId,
			GROUP_ID as groupId,
			ITEM_ID as attributeValueId,
			ITEM_ORDER as itemOrder,
			DEFAULT_VALUE as defaultPercentage
		FROM
			SMC.OBM_BUSINESS_AWARD_DEFAULTS
	</select>

	<update id="updateBusinessAwardDefault">
		UPDATE SMC.OBM_BUSINESS_AWARD_DEFAULTS
		SET 
			ITEM_ORDER = #{awardDefault.itemOrder},
			DEFAULT_VALUE = #{awardDefault.defaultPercentage}
		WHERE
			ITEM_ID = #{awardDefault.attributeValueId}
	</update>

	<insert id="insertBusinessAwardDefault">
		INSERT INTO SMC.OBM_BUSINESS_AWARD_DEFAULTS
 				(GROUP_ID, ITEM_ID, ITEM_ORDER, DEFAULT_VALUE)
 		VALUES
 			<foreach collection="defaultsToInsert" item="awardDefault" separator="," open="" close="">
 				(#{awardDefault.groupId}, #{awardDefault.attributeValueId}, #{awardDefault.itemOrder}, #{awardDefault.defaultPercentage})
 			</foreach>
	</insert>
	
	<!--***** BUILD ATTRIBUTE *****-->
	<resultMap type="com.penske.apps.buildmatrix.domain.BuildAttribute" id="BuildAttributeMap">
		<id column="ATTRIBUTE_ID"					property="attributeId" />
		<result column="ATTRIBUTE_KEY" 				property="attributeKey"/>
		<result column="ATTRIBUTE_NAME"   			property="attributeName"/>
		<result column="BUSINESS_AWARD_GROUP_ID"	property="groupId"/>
		<result column="GROUP_KEY"  				property="groupKey"/>
		<result column="GROUP_DESCRIPTION"    		property="groupDescription"/>
		<result column="GROUP_ORDER"    			property="groupOrder"/>
		<collection property="attributeValues"		ofType="com.penske.apps.buildmatrix.domain.BuildAttributeValue" column="ATTRIBUTE_ID" resultMap="BuildAttributeValueMap" columnPrefix="VAL_" />
	</resultMap>
	
	<resultMap type="com.penske.apps.buildmatrix.domain.BuildAttributeValue" id="BuildAttributeValueMap">
		<id column="ATTRIBUTE_VALUE_ID"			property="attributeValueId" />
		<result column="ATTRIBUTE_VALUE"		property="attributeValue" />
		<result column="DEFAULT_VALUE"			property="defaultPercentage" />
		<result column="ITEM_ORDER"				property="itemOrder" />
	</resultMap>
	
	<select id="getAllBuildMatrixAttributes" resultMap="BuildAttributeMap">
		SELECT
			attribute.ATTRIBUTE_ID,
			attribute.ATTRIBUTE_KEY,
			attribute.ATTRIBUTE_NAME,
			awardGroup.BUSINESS_AWARD_GROUP_ID,
			awardGroup.GROUP_KEY,
			awardGroup.GROUP_DESCRIPTION,
			awardGroup.GROUP_ORDER,
			val.ATTRIBUTE_VALUE_ID AS VAL_ATTRIBUTE_VALUE_ID,
			val.ATTRIBUTE_VALUE AS VAL_ATTRIBUTE_VALUE,
			COALESCE(awardDefs.DEFAULT_VALUE, 0 ) AS VAL_DEFAULT_VALUE,
			COALESCE(awardDefs.ITEM_ORDER, -1) AS VAL_ITEM_ORDER
		FROM SMC.OBM_ATTRIBUTE_VALUE val
		LEFT JOIN SMC.OBM_ATTRIBUTE attribute
			ON attribute.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_DEFAULTS awardDefs
			ON awardDefs.ITEM_ID = val.ATTRIBUTE_VALUE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_GROUP awardGroup
			ON awardGroup.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		WHERE val.IS_DELETED = 'N'
		ORDER BY attribute.ATTRIBUTE_ID
	</select>
	
	<select id="getAttributesForBuild" resultMap="BuildAttributeMap">
		SELECT
			attribute.ATTRIBUTE_ID,
			attribute.ATTRIBUTE_KEY,
			attribute.ATTRIBUTE_NAME,
			awardGroup.BUSINESS_AWARD_GROUP_ID,
			awardGroup.GROUP_KEY,
			awardGroup.GROUP_DESCRIPTION,
			awardGroup.GROUP_ORDER,
			val.ATTRIBUTE_VALUE_ID AS VAL_ATTRIBUTE_VALUE_ID,
			val.ATTRIBUTE_VALUE AS VAL_ATTRIBUTE_VALUE,
			COALESCE(awardDefs.DEFAULT_VALUE, 0 ) AS VAL_DEFAULT_VALUE,
			COALESCE(awardDefs.ITEM_ORDER, -1) AS VAL_ITEM_ORDER
		FROM SMC.OBM_ATTRIBUTE_VALUE val
		LEFT JOIN SMC.OBM_ATTRIBUTE attribute
			ON attribute.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_DEFAULTS awardDefs
			ON awardDefs.ITEM_ID = val.ATTRIBUTE_VALUE_ID
		JOIN SMC.OBM_BUSINESS_AWARD_GROUP awardGroup
			ON awardGroup.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		WHERE val.IS_DELETED = 'N'
		ORDER BY attribute.ATTRIBUTE_ID
	</select>
	
	<select id="getBuildAttributeById" resultMap="BuildAttributeMap">
		SELECT
			attribute.ATTRIBUTE_ID,
			attribute.ATTRIBUTE_KEY,
			attribute.ATTRIBUTE_NAME,
			awardGroup.BUSINESS_AWARD_GROUP_ID,
			awardGroup.GROUP_KEY,
			awardGroup.GROUP_DESCRIPTION,
			awardGroup.GROUP_ORDER,
			val.ATTRIBUTE_VALUE_ID AS VAL_ATTRIBUTE_VALUE_ID,
			val.ATTRIBUTE_VALUE AS VAL_ATTRIBUTE_VALUE,
			COALESCE(awardDefs.DEFAULT_VALUE, 0 ) AS VAL_DEFAULT_VALUE,
			COALESCE(awardDefs.ITEM_ORDER, -1) AS VAL_ITEM_ORDER
		FROM SMC.OBM_ATTRIBUTE_VALUE val
		LEFT JOIN SMC.OBM_ATTRIBUTE attribute
			ON attribute.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_DEFAULTS awardDefs
			ON awardDefs.ITEM_ID = val.ATTRIBUTE_VALUE_ID
		LEFT JOIN SMC.OBM_BUSINESS_AWARD_GROUP awardGroup
			ON awardGroup.ATTRIBUTE_ID = val.ATTRIBUTE_ID
		WHERE
			attribute.ATTRIBUTE_ID = #{attributeId}
		AND
		 	val.IS_DELETED = 'N'		
	</select>
	
	<update id="updateAttributeValues">
		UPDATE 	SMC.OBM_ATTRIBUTE_VALUE 
		SET 	IS_DELETED = 'Y'
		WHERE  	ATTRIBUTE_ID = #{attributeId}
        AND 	ATTRIBUTE_VALUE IN 
		<foreach collection="attributeValues" item="id" separator="," open="(" close=")">#{id}</foreach>
	</update>
	
	<update id="addOrUpdateAttribute">
		MERGE INTO SMC.OBM_ATTRIBUTE_VALUE AS attributeValues USING
		(
		VALUES
			( 
				CAST(#{attributeId} AS INTEGER),
				CAST(#{attributeValue.attributeValue} AS VARCHAR(30))
			)
		)
		AS input
		(
			ATTRIBUTE_ID, ATTRIBUTE_VALUE
		)
		ON   input.ATTRIBUTE_ID = attributeValues.ATTRIBUTE_ID  
		AND  input.ATTRIBUTE_VALUE = attributeValues.ATTRIBUTE_VALUE
		WHEN MATCHED THEN UPDATE SET attributeValues.IS_DELETED= 'N'
		WHEN NOT MATCHED THEN
		INSERT
			(
			ATTRIBUTE_ID,
			ATTRIBUTE_VALUE,
			IS_DELETED
			)
		 VALUES
			(
			input.ATTRIBUTE_ID,
			input.ATTRIBUTE_VALUE,
			'N'
			)
	</update>
	
	<select id="getDeletedFlagValue" resultType="String">
	 	SELECT   IS_DELETED AS deletedFlag
		FROM     SMC.OBM_ATTRIBUTE_VALUE
		WHERE    ATTRIBUTE_ID=#{attributeId}
		AND 	 ATTRIBUTE_VALUE = #{attributeValue}
	</select> 
	
 	<select id="getAllAttributeValues" resultType="String">
	 	SELECT   TRIM(ATTRIBUTE_VALUE)
		FROM     SMC.OBM_ATTRIBUTE_VALUE
		WHERE    ATTRIBUTE_ID=#{attributeId}
		ORDER BY ATTRIBUTE_VALUE ASC
	</select>
	
	<select id="getAllBuildMatrixCapabilities" resultMap="BodyPlantCapabilityMap">
		SELECT   ATTRIBUTE_ID AS attributeId,
		         ATTRIBUTE_KEY AS attributeKey,
		         ATTRIBUTE_NAME AS attributeName
		FROM     SMC.OBM_ATTRIBUTE
	</select>

	<resultMap id="BodyPlantCapabilityMap" type="com.penske.apps.buildmatrix.domain.BodyPlantCapability" >
		<result property="attributeId"   	column="attributeId"/>
		<result property="attributeKey"   	column="attributeKey"/>
		<result property="attributeName" 	column="attributeName"/>
		<result property="attributeValue" 	column="attributeValue"/>
		<collection property="values" 		column="attributeId" select="getAllAttributeValues"></collection>
	</resultMap>

	<select id="getAllBuildMatrixExceptions" resultType="com.penske.apps.buildmatrix.domain.BodyPlantCapability">
		SELECT   DISALLOW_LIFTGATE_INSTALL AS liftgateInstalled,
		         DISALLOW_REAR_DOOR_INSTALL AS rearDoorInstalled,
		         DISALLOW_REEFER_INSTALL AS reeferInstalled,
		         DISALLOW_VEHICLE_TYPE AS vehicleType,
		         DISALLOW_CHASSIS_MAKE AS chassisMake,
		         DISALLOW_GVW AS gvw,
		         DISALLOW_BODY_MAKE AS bodyMake,
		         DISALLOW_REAR_DOOR_MAKE AS rearDoorMake,
		         DISALLOW_LIFTGATE_MAKE AS liftgateMake,
		         DISALLOW_LIFTGATE_TYPE AS liftgateType,
		         DISALLOW_FUEL_TYPE AS fuelType,
		         DISALLOW_CHASSIS_COLOR AS chassisColor,
		         DISALLOW_CHASSIS_LENGTH AS chassisLength,
		         DISALLOW_WHEELBASE AS wheelbase,
		         DISALLOW_WHEEL_MATERIAL AS wheelMaterial,
		         DISALLOW_CORP AS corp,
		         DISALLOW_CHASSIS_MODEL AS chassisModel,
		         DISALLOW_CHASSIS_MODEL_YEAR AS chassisModelYear,
		         DISALLOW_TRANSMISSION_MAKE AS transmissionMake,
		         DISALLOW_BRAKE_TYPE AS brakeType,
		         DISALLOW_SUSPENSION_TYPE AS suspensionType,
		         DISALLOW_REEFER_MAKE AS reeferMake,
		         DISALLOW_SIDE_DOOR_INSTALL AS sideDoorInstalled
		FROM     SMC.OBM_PLANT_CAPABILITY
		WHERE    PLANT_ID = #{plantId}
	</select>
	
	<select id="getAttributesbyId" resultMap="BodyPlantCapabilityMap">
		SELECT   ATTRIBUTE_ID AS attributeId,
		         ATTRIBUTE_KEY AS attributeKey,
		         ATTRIBUTE_NAME AS attributeName
		FROM     SMC.OBM_ATTRIBUTE
		WHERE 	 ATTRIBUTE_ID =  #{attributeId}
	</select>
	
	<update id="updateCapability">
		UPDATE SMC.OBM_PLANT_CAPABILITY
		SET
		<if test="attributeKey.equals('WHEELBASE')">DISALLOW_WHEELBASE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('GVW')">DISALLOW_GVW = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('WHEELMATERIAL')">DISALLOW_WHEEL_MATERIAL = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('COLOR')">DISALLOW_CHASSIS_COLOR = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('FUELTYPE')">DISALLOW_FUEL_TYPE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('LIFTGATEMAKE')">DISALLOW_LIFTGATE_MAKE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('LIFTGATETYPE')">DISALLOW_LIFTGATE_TYPE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('CHASSISMAKE')">DISALLOW_CHASSIS_MAKE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('REARDOORMAKE')">DISALLOW_REEFER_MAKE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('VEHICLETYPE')">DISALLOW_VEHICLE_TYPE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('REARDOORINSTALLED')">DISALLOW_REAR_DOOR_INSTALL = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('LIFTGATEINSTALLED')">DISALLOW_LIFTGATE_INSTALL = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('REEFERINSTALLED')">DISALLOW_REEFER_INSTALL = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('BODYMAKE')">DISALLOW_BODY_MAKE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('CHASSISLENGTH')">DISALLOW_CHASSIS_LENGTH = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('CORP')">DISALLOW_CORP = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('CHASSISMODEL')">DISALLOW_CHASSIS_MODEL = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('CHASSISMODELYEAR')">DISALLOW_CHASSIS_MODEL_YEAR = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('TRANSMISSIONMAKE')">DISALLOW_TRANSMISSION_MAKE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('REEFERMAKE')">DISALLOW_REEFER_MAKE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('SIDEDOORINSTALLED')">DISALLOW_SIDE_DOOR_INSTALL = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('BRAKETYPE')">DISALLOW_BRAKE_TYPE = #{disallowedAttributeValues}</if>
		<if test="attributeKey.equals('SUSPENSIONTYPE')">DISALLOW_SUSPENSION_TYPE = #{disallowedAttributeValues}</if>
	    WHERE	PLANT_ID = #{plantId}
	</update>
	
	<!-- PRODUCTION SLOT AVAILBILITY MAINTENANCE -->
	<select id="getAllVehicleTypes" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixSlotType">
		SELECT   SLOT_TYPE_ID AS slotTypeId,
		         SLOT_DESCRIPTION AS slotTypeDesc,
		         SLOT_TYPE AS slotType
		FROM     SMC.OBM_SLOT_TYPES
		ORDER BY SLOT_TYPE_ID ASC

	</select>
	
	<select id="getYearsforSLotMaintenance" resultType="int">
		SELECT DISTINCT SLOT_YEAR FROM SMC.OBM_SLOT_DATES
	</select>
	
	<select id="getAllBodyPlantsforSlotMaintenance" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixBodyPlant">
		SELECT   PLANT_ID AS plantId,
		         PLANT_MFR_CODE AS plantMfrCode,
		         PLANT_MANUFACTURER AS plantManufacturer,
		         PLANT_NAME AS plantName,
		         PLANT_STATE AS state,
		         PLANT_ZIP AS zip,
		         PLANT_COUNTRY AS country,
		         PLANT_CITY AS city
		FROM     SMC.OBM_PLANTS
		ORDER BY PLANT_MANUFACTURER, PLANT_CITY
	</select>
	
	<resultMap id="slotMaintenanceMap" type="com.penske.apps.buildmatrix.domain.BuildMatrixSlotDate" >
		<result column="SLOT_DATE_ID"  property="slotDateId"/>
		<result column="SLOT_DATE_D"  property="slotDate"/>
		<result column="SLOT_YEAR" 	property="slotYear"/>
		<result column="WEEK_OF_YEAR" property="weekOfYear"/>
		<collection property="buildSlots" column="{slotDateId=SLOT_DATE_ID,slotTypeId=stypeId}" select="getSlotAvailability"></collection>
	</resultMap>
	
	<select id="getSlotMaintenanceSummary" parameterType="int" resultMap="slotMaintenanceMap">
		SELECT   CAST(#{slotTypeId} AS INTEGER) AS stypeId,
		         SLOT_DATE_ID,
		         SLOT_YEAR,
		         WEEK_OF_YEAR,
		         DATE(to_date(SLOT_DATE,'MM/DD/YYYY')) AS SLOT_DATE_D
		FROM     SMC.OBM_SLOT_DATES
		WHERE    SLOT_YEAR=#{selectedYear}
	</select>
	
	<select id="getSlotDate" parameterType="int" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixSlotDate">
		SELECT   SLOT_DATE_ID,
		         SLOT_YEAR,
		         WEEK_OF_YEAR,
		         DATE(to_date(SLOT_DATE,'MM/DD/YYYY')) AS SLOT_DATE
		FROM     SMC.OBM_SLOT_DATES
		WHERE    SLOT_DATE_ID=#{slotDateId}
	</select>
	
	<select id="getSlotAvailability" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixSlot">
		SELECT   SLOT_ID AS slotId,
		         SLOT_TYPE_ID AS slotTypeId,
		         plant.PLANT_ID AS plantId,
		         SLOT_AVAILABLE AS availableSlots,
		         SLOT_RESERVED AS reservedSlots
		FROM     SMC.OBM_SLOTS SLOT 
		         JOIN SMC.OBM_PLANTS PLANT ON SLOT.PLANT_ID = PLANT.PLANT_ID
		WHERE    SLOT_TYPE_ID=CAST(#{slotTypeId} AS INTEGER)
		AND      SLOT_DATE_ID=#{slotDateId}
		ORDER BY PLANT.PLANT_MANUFACTURER, PLANT.PLANT_CITY
	</select>
	
	<select id="getRegionAvailability" resultType="com.penske.apps.buildmatrix.domain.BuildMatrixSlotRegionAvailability">
		SELECT 
			SLOT_REGION_ID,
			SLOT_ID,
			REGION,
			SLOT_AVAILABLE,
			SLOT_RESERVED,
			SLOT_ACCEPTED
		FROM
			SMC.OBM_SLOTS_BY_REGION
		WHERE
			SLOT_ID IN (
				<foreach collection="slotIds" item="slotId" separator="," open="" close="">
	 				#{slotId}
	 			</foreach>
			)
	</select>
	
	<select id="getBuildMaximumWeeksBefore" resultType="int">
		SELECT
		MAXIMUM_WEEKS_BEFORE_ALLOWED 
		FROM SMC.OBM_RUN_WEEK_THRESHOLD
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="getBuildMaximumWeeksAfter" resultType="int">
		SELECT
		MAXIMUM_WEEKS_AFTER_ALLOWED 
		FROM SMC.OBM_RUN_WEEK_THRESHOLD
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="getReservedUnitNumbers" resultType="String">
		SELECT 
			TRIM(UNIT_NUMBER)
		FROM SMC.OBM_SLOT_RESERVATION
		WHERE SLOT_ID = #{slotId}
		AND REGION = #{region}
		ORDER BY UNIT_NUMBER
	</select>
</mapper>