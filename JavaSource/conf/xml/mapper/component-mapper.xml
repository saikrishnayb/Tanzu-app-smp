<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penske.apps.adminconsole.dao.ComponentDao">

	<!-- <select id="getComponent" resultType="com.penske.suppliermgmt.model.ComponentVisibility">
		SELECT 	c.COMPONENT_ID as componentId,
				c.COMPONENT_NAME as componentName,
				d.PO_category_ID as "category.categoryId",
				d.sub_category_ID as "subCategory.subCategoryId", 
				d.visibility as visibility		
		FROM 	 SMC.SMC_COMPONENT_INFO c,
		 SMC.smc_COMPONENT_INFO_DETAILS d
		where c.Component_ID =d.component_ID
		and d.visibility= 1 
		order by c.COMPONENT_NAME
		
		
	</select> -->
	
	<select id="getComponent" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">
		
		
		select
		catmap.is_vehicle_comp as  isComponentVehicle,
catmap.component_id as componentId, 
catmap.component_group ||catmap.sub_group || catmap.sub_component_name  as componentName,
cat.po_category_id as "category.categoryId",
cat.po_category "category.categoryName",
subcat.po_subcategory as  "subCategory.subCategoryName",
subcat.po_subcategory_id as "subCategory.subCategoryId",
catmap.visible  as visibility
from smc.smc_comp_category_map catmap
join smc.smc_po_category_assoc catassoc on catassoc.po_category_assoc_id = catmap.po_category_assoc_id
join smc.smc_po_category cat on cat.po_category_id = catassoc.po_category_assoc_id
join smc.smc_po_subcategory subcat on subcat.po_subcategory_id = catassoc.po_subcategory_id
where visible ='Y' and is_vehicle_comp = 'Y'
		
   </select>
								<!--Category-->
	<!-- <select id="getCategory" resultType="com.penske.suppliermgmt.model.PoCategory">
		SELECT	
				d.PO_category_ID as categoryId,
				e.Po_category as categoryName					
		FROM 	
		 SMC.smc_COMPONENT_INFO_DETAILS d,SMC.SMC_PO_CATEGORY e
		where d.Component_ID =#{componentId} and d.PO_category_ID =	e.PO_category_ID 
		and d.visibility= 0 
	</select>
	
	<select id="getVehicleCategory" resultType="com.penske.suppliermgmt.model.PoCategory">
		SELECT	
				d.PO_category_ID as categoryId,
				e.Po_category as categoryName					
		FROM 	
		 SMC.smc_vehicle_INFO_DETAILS d,SMC.SMC_PO_CATEGORY e
		where d.vehicle_info_id =#{componentId} and d.PO_category_ID =	e.PO_category_ID 
		and d.visibility= 0 
	</select> -->
	
	<select id="getCategory" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">
   SELECT catmap.visible      AS isComponentVehicle, 
       catmap.component_id AS componentId, 
       cat.po_category_id  AS "category.categoryId", 
       cat.po_category     AS "category.categoryName" 
   FROM   smc.smc_comp_category_map catmap 
       INNER JOIN smc.smc_po_category_assoc catassoc 
               ON catassoc.po_category_assoc_id = catmap.po_category_assoc_id 
       INNER JOIN smc.smc_po_category cat 
               ON catassoc.po_category_id = cat.po_category_id 
   WHERE  catmap.component_id = #{componentId}
         AND ( catmap.visible = 'Y' 
              OR catmap.visible IS NULL ) 
	</select>
	
	<select id="getVehicleCategory" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">
		SELECT	distinct
				2 as isComponentVehicle,
				d.vehicle_info_id as componentId,
				d.PO_category_ID as "category.categoryId",
				e.Po_category as "category.categoryName"					
		FROM 	
		 SMC.smc_vehicle_INFO_DETAILS d,SMC.SMC_PO_CATEGORY e
		where d.vehicle_info_id =#{componentId} and d.PO_category_ID =	e.PO_category_ID 
		and (d.visibility= 0 or d.visibility is null)
	</select>
	
	<select id="getComponentSubCategory" resultType ="com.penske.apps.adminconsole.model.SubCategory" >
		
	           
              SELECT subcat.po_subcategory    AS subCategoryName, 
       subcat.po_subcategory_id AS subCategoryId 
FROM   smc.smc_comp_category_map catmap 
       INNER JOIN smc.smc_po_category_assoc catassoc 
               ON catassoc.po_category_assoc_id = catmap.po_category_assoc_id 
       INNER JOIN smc.smc_po_category cat 
               ON catassoc.po_category_id = cat.po_category_id 
       INNER JOIN smc.smc_po_subcategory subcat 
               ON catassoc.po_subcategory_id = subcat.po_subcategory_id 
WHERE  catmap.component_id = #{componentId}  
       AND catassoc.po_category_id = #{poCategoryId} 
       AND ( catmap.visible = 'Y' 
              OR catmap.visible IS NULL ) 
	
		
	</select>
	
	<select id="getVehicleSubCategory" resultType ="com.penske.apps.adminconsole.model.SubCategory" >
		
		SELECT 
		SUBC.PO_SUBCATEGORY as subCategoryName,
		SUBC.PO_SUBCATEGORY_ID as subCategoryId
FROM
		SMC.SMC_PO_SUBCATEGORY SUBC
WHERE
		SUBC.PO_SUBCATEGORY_ID  in(SELECT asoc.PO_SUBCATEGORY_ID from SMC.SMC_PO_CATEGORY_ASSOC asoc where asoc.PO_CATEGORY_ID =#{poCategoryId})
	
	</select>
	
	 <select id="getComponentName" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">


	SELECT
	1 as isComponentVehicle,
	vehcorp.COMPONENT_ID as componentId,
	(vehcorp.component_group || vehcorp.sub_group || vehcorp.sub_component_name) as componentName,
	cat.PO_category_ID as "category.categoryId",
	cat.Po_category as "category.categoryName",
	subcat.po_subcategory_ID as "subCategory.subCategoryId",
	subcat.PO_SUBCATEGORY as "subCategory.subCategoryName",
	catmap.visible as visibility
	FROM CORP.VEHCMPSGF vehcorp
	left outer join
	SMC.smc_COMP_CATEGORY_MAP catmap
	on vehcorp.Component_ID = catmap.component_ID
	left outer join SMC.SMC_PO_CATEGORY_ASSOC catassoc
	on catmap.PO_category_Assoc_ID = catassoc.PO_category_Assoc_ID
	left outer join SMC.SMC_PO_CATEGORY cat on
	cat.PO_category_ID = catassoc.PO_category_ID
	left outer join SMC.SMC_PO_SUBCATEGORY subcat on
	subcat.po_subcategory_ID = catassoc.po_subcategory_ID
	where
	catmap.visible= 'N' or catmap.visible is null


	union
	SELECT
	2 as isComponentVehicle,
	vehcorp.VEHCOMP_ID as componentId,
	vehcorp.component_name as componentName,
	cat.PO_category_ID as "category.categoryId",
	cat.Po_category as "category.categoryName",
	subcat.po_subcategory_ID as "subCategory.subCategoryId",
	subcat.PO_SUBCATEGORY as "subCategory.subCategoryName",
	catmap.visible as visibility
	FROM smc.SMC_VEHICLE_INFO vehcorp
	left outer join
	SMC.smc_COMP_CATEGORY_MAP catmap
	on vehcorp.VEHCOMP_ID = catmap.component_ID
	left outer join SMC.SMC_PO_CATEGORY_ASSOC catassoc
	on catmap.PO_category_Assoc_ID = catassoc.PO_category_Assoc_ID
	left outer join SMC.SMC_PO_CATEGORY cat on
	cat.PO_category_ID = catassoc.PO_category_ID
	left outer join SMC.SMC_PO_SUBCATEGORY subcat on
	subcat.po_subcategory_ID = catassoc.po_subcategory_ID
	where
	catmap.visible= 'Y' or catmap.visible is null
	
	</select>
	
	 <select id="getComponentList" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">
	 
	SELECT
	1 as isComponentVehicle,
	vehcorp.COMPONENT_ID as componentId,
	(vehcorp.component_group || vehcorp.sub_group || vehcorp.sub_component_name) as componentName,
	FROM CORP.VEHCMPSGF vehcorp
	inner join  corp.vehcmpcatf vehcorpcat
	on vehcorp.COMPONENT_ID =  vehcorpcat.COMPONENT_ID
	where vehcorpcat.vehicle_category = #{poCategoryId}
	 
	 </select>
	
	
	
	 <select id="getCategoryList" resultType="com.penske.apps.adminconsole.model.PoCategory">
	select PO_CATEGORY_ID as categoryId,
	PO_CATEGORY as categoryName,
	DESCRIPTION as description,
	STATUS as status,
	CREATED_BY as createdBy,
	CREATED_DATE as createdDate
	FROM smc.smc_po_category
	 </select>
	  <select id="getSubCategoryList" resultType="com.penske.apps.adminconsole.model.SubCategory">
	select PO_SUBCATEGORY_ID as subCategoryId,
PO_SUBCATEGORY as subCategoryName

	FROM smc.smc_po_subcategory
	 </select>
	 
	 <select id="getComponentDetails" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">
		
			SELECT  
					1 as isComponentVehicle,	
					c.COMPONENT_ID as componentId,
					c.COMPONENT_NAME as componentName,
					d.PO_category_ID as "category.categoryId",
					e.Po_category as "category.categoryName",
					d.sub_category_ID as "subCategory.subCategoryId", 
					f.PO_SUBCATEGORY as "subCategory.subCategoryName"	
			FROM 	SMC.SMC_COMPONENT_INFO c,
			 		SMC.smc_COMPONENT_INFO_DETAILS d,
			 		SMC.SMC_PO_CATEGORY e,
			 		SMC.SMC_PO_SUBCATEGORY f
			where c.Component_ID =d.component_ID and 	
				d.PO_category_ID =	e.PO_category_ID and 	
				d.sub_category_ID =	f.PO_SUBCATEGORY_ID and 
				c.COMPONENT_ID = #{componentId} and 
				d.PO_category_ID=#{poCategoryId} and 
				d.sub_category_ID=#{subCategoryId}
	
	</select> 
	
	<select id="getVehicleComponentDetails" resultType="com.penske.apps.adminconsole.model.ComponentVisibility">
			SELECT  
					2 as isComponentVehicle,	
					c.vehicle_info_ID as componentId,
					c.description as componentName,
					d.PO_category_ID as "category.categoryId",
					e.Po_category as "category.categoryName",
					d.sub_category_ID as "subCategory.subCategoryId", 
					f.PO_SUBCATEGORY as "subCategory.subCategoryName"	
			FROM 	SMC.SMC_VEHICLE_INFO c,
			 		SMC.SMC_VEHICLE_INFO_details d,
			 		SMC.SMC_PO_CATEGORY e,
			 		SMC.SMC_PO_SUBCATEGORY f
			where c.vehicle_info_ID =d.vehicle_info_ID and 	
				d.PO_category_ID =	e.PO_category_ID and 	
				d.sub_category_ID =	f.PO_SUBCATEGORY_ID and 
				c.vehicle_info_ID = #{componentId} and 
				d.PO_category_ID=#{poCategoryId} and 
				d.sub_category_ID=#{subCategoryId}
	</select> 
	
	
	<update id="deleteComponentVisibility" >
			
				update smc.smc_component_info_details c 
				set c.visibility=0 
				where 
				c.component_id= #{componentId} and 
				c.po_category_id = #{poCategoryId} and 
				c.sub_Category_id = #{subCategoryId}
	</update>
	
	<update id="deleteVehicleVisibility" >
			
				update smc.smc_vehicle_info_details c 
				set c.visibility=0 
				where 
				c.vehicle_info_id= #{componentId} and 
				c.po_category_id = #{poCategoryId} and 
				c.sub_Category_id = #{subCategoryId}
	</update>
	
	<update id="addComponentVisibility" >
			
				update smc.smc_component_info_details c 
				set c.visibility=1 
				where 
				c.component_id= #{componentId} and 
				c.po_category_id = #{poCategoryId} and 
				c.sub_Category_id = #{subCategoryId}
	</update>
	
	<update id="addVehicleVisibility" >
			
				update smc.smc_vehicle_info_details c 
				set c.visibility=1 
				where 
				c.vehicle_info_id= #{componentId} and 
				c.po_category_id = #{poCategoryId} and 
				c.sub_Category_id = #{subCategoryId}
	</update>
	
<!-- Template Page Start -->
	<select id="getAllTemplates"  resultType="com.penske.apps.adminconsole.model.Template">
  
          WITH components AS (
            SELECT COUNT(EXPORT_TO_EXCEL) AS excelExportCount, TEMPLATE_ID
            FROM SMC.SMC_TEMPLATE_COMPONENTS
            WHERE EXPORT_TO_EXCEL = 'Y'
            GROUP BY TEMPLATE_ID
          )
  
 		  SELECT templateMaster.TEMPLATE_ID as templateID,
 		    CASE WHEN templateMaster.STATUS = 'A' THEN 1 ELSE 0 END AS active,
            templateMaster.TEMPLATE_HASH as templateHash, 
            templateMaster.TEMPLATE_NAME as templateName,
            templateMaster.TEMPLATE_DESC as templateDesc, 
            PO_CATEGORY_ASSOC_ID as poCatAssID,
            COALESCE(CATEGORY,'') as poCatDesc,
            COALESCE(SUBCATEGORY,'') as poSubCatDesc ,
            CASE WHEN (COALESCE(components.excelExportCount, 0)) > 0 THEN 1 ELSE 0 END as hasExcelExport
       FROM SMC.SMC_TEMPLATE_MASTER templateMaster
 INNER JOIN SMC.V_SMC_PO_CATEGORY_COMBINATIONS  catCombinations
            ON templateMaster.PO_CATEGORY_ASSOC_ID = catCombinations.ASSOC_ID
  LEFT JOIN components
            ON templateMaster.TEMPLATE_ID = components.TEMPLATE_ID
 	</select>
 	
 	<select id="getAllPoAssociation"  resultType="com.penske.apps.adminconsole.model.TemplatePoAssociation">
		SELECT CATEGORY || '/' || SUBCATEGORY as poCatSubCatDesc, ASSOC_ID as poCatAssocID FROM SMC.V_SMC_PO_CATEGORY_COMBINATIONS
 	</select>
 	<select id="getTemplatesById"  resultType="com.penske.apps.adminconsole.model.Template">
 		SELECT TEMPLATE_ID as templateID, TEMPLATE_HASH as templateHash, TEMPLATE_NAME as templateName,
 		 TEMPLATE_DESC as templateDesc, PO_CATEGORY_ASSOC_ID as poCatAssID  FROM SMC.SMC_TEMPLATE_MASTER 
 		 WHERE  TEMPLATE_ID=#{templateID}
 	</select>
 	
 	<select id="getAllComponent"  resultType="com.penske.apps.adminconsole.model.Components">
 		SELECT COMPONENT_ID as componentId, DISPLAY_NAME as componentName,FULL_NAME as fullName FROM SMC.V_SMC_AVAILABLE_COMPONENTS
 	</select>
 	
 	<insert id="addTemplate">
 		INSERT 	INTO SMC.SMC_TEMPLATE_MASTER  
 				(TEMPLATE_HASH,TEMPLATE_DESC,TEMPLATE_NAME,
 				CREATED_BY,MODIFIED_BY,PO_CATEGORY_ASSOC_ID,STATUS) 
 		VALUES 	(#{templateHash},#{templateDesc},#{templateDesc}, #{createdBy},#{createdBy},#{poCatAssID},'A')
 		 <selectKey resultType="int" keyProperty="templateID" order="AFTER" >
           SELECT IDENTITY_VAL_LOCAL() as identity_val FROM SYSIBM.SYSDUMMY1
		</selectKey> 
 	</insert>
 	
 	<insert id="addTemplateComponent">
 		INSERT INTO SMC.SMC_TEMPLATE_COMPONENTS
 		(TEMPLATE_ID, COMPONENT_ID, COMPONENT_ACCESS, AVAIL_TO_OTHER_PO, EXPORT_TO_EXCEL, 
 		CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
 		VALUES 	(#{templateId},#{componentId},#{editRequiredStr},#{dispOtherPOStr},#{excelStr},#{createdBy}
 		,CURRENT TIMESTAMP,#{modifiedBy},CURRENT TIMESTAMP)
 	</insert>
	
	<update id="updateTemplateComponent">
 		UPDATE SMC.SMC_TEMPLATE_COMPONENTS
 		SET 
	 		 COMPONENT_ACCESS = #{editRequiredStr}, 
	 		 AVAIL_TO_OTHER_PO = #{dispOtherPOStr},
	 		 EXPORT_TO_EXCEL = #{excelStr}, 
	 		 MODIFIED_BY = #{modifiedBy},
	 		 MODIFIED_DATE = CURRENT TIMESTAMP
 		WHERE 
 		     TEMPLATE_ID = #{templateId} AND COMPONENT_ID = #{componentId}
 	</update>
	
	<update id="updateTemplate">
 		UPDATE SMC.SMC_TEMPLATE_MASTER 
		SET TEMPLATE_HASH=#{templateHash},TEMPLATE_DESC=#{templateDesc},TEMPLATE_NAME=#{templateDesc},
 			MODIFIED_BY=#{createdBy},PO_CATEGORY_ASSOC_ID=#{poCatAssID}, MODIFIED_DATE=CURRENT TIMESTAMP
 		WHERE TEMPLATE_ID = #{templateID}
 	</update>
		
 	<update id="deActivateTemplate">
 		UPDATE SMC.SMC_TEMPLATE_MASTER SET STATUS='I' WHERE TEMPLATE_ID = #{templateID}
 	</update>
 	
 	<update id="activateTemplate">
 		UPDATE SMC.SMC_TEMPLATE_MASTER SET STATUS='A' WHERE TEMPLATE_ID = #{templateID}
 	</update>
 	
 	<select id="isTemplateComponentExist" resultType="_boolean">
	 SELECT CASE WHEN Count(COMPONENT_ID) > 0 THEN 1 ELSE 0 END  FROM SMC_TEMPLATE_COMPONENTS WHERE TEMPLATE_ID = #{templateId} AND COMPONENT_ID = #{componentId}
 	</select>
 	
 	<select id="isComponentExistInRule" resultType="_boolean">
	 SELECT CASE WHEN Count(SCRO.RULE_ID) > 0 THEN 1 ELSE 0 END  FROM SMC.SMC_COMPONENT_RULE_OVERRIDES SCRO WHERE SCRO.RULE_ID = #{ruleId} AND SCRO.TEMP_COMP_ID = #{tempCompId}
 	</select>
 	
 	<select id="isComponentExistInRuleDefinitions" resultType="_boolean">
	 SELECT CASE WHEN Count(SCVRD.RULE_ID) > 0 THEN 1 ELSE 0 END  FROM SMC.SMC_CMP_VISIBILITY_RULES_DEFINITION SCVRD WHERE SCVRD.RULE_ID = #{ruleId} AND SCRO.TEMP_COMP_ID = #{componentId}
 	</select>
 	
 	<delete  id="deleteComponentRuleMapping">
 		DELETE 	FROM SMC.SMC_COMPONENT_RULE_OVERRIDES
 		WHERE RULE_ID = #{ruleId} AND TEMP_COMP_ID = #{tempCompId}
 	</delete>
 	
 	<delete  id="deleteTemplateComponents">
 		DELETE 	FROM SMC.SMC_TEMPLATE_COMPONENTS
 		WHERE TEMPLATE_ID = #{templateId} AND COMPONENT_ID IN <foreach collection="deletedTempComponents" item="ComponentId" separator="," open="(" close=")">#{ComponentId}</foreach>
 	</delete>
 	<select id="getTemplateComponentById" resultType="com.penske.apps.adminconsole.model.Components">
	  SELECT STM.TEMPLATE_ID as templateId, STM.TEMP_COMP_ID as templateComponentId, STM.COMPONENT_ID as componentId,
            COUNT(SCRO.RULE_ID) AS ruleCount,STM.COMPONENT_ACCESS as editRequiredStr,STM.AVAIL_TO_OTHER_PO as dispOtherPOStr,STM.EXPORT_TO_EXCEL as excelStr
       		FROM SMC.SMC_TEMPLATE_COMPONENTS STM LEFT OUTER JOIN SMC.SMC_COMPONENT_RULE_OVERRIDES SCRO on SCRO.TEMP_COMP_ID = STM.TEMP_COMP_ID WHERE STM.TEMPLATE_ID=#{templateID} 
				GROUP BY STM.TEMPLATE_ID, STM.TEMP_COMP_ID,STM.COMPONENT_ID,STM.COMPONENT_ACCESS,STM.AVAIL_TO_OTHER_PO,STM.EXPORT_TO_EXCEL
 	</select>
 	
 	<select id="getTemplateComponentByTempId" resultType="com.penske.apps.adminconsole.model.LoadSheetComponentDetails">
 	  Select
			STM.COMPONENT_ID AS componentId,
			COMPONENT_TYPE AS componentType,
			GROUP_NAME AS componentGroup,
			DISPLAY_NAME AS  componentName
	  FROM 
	       SMC.SMC_TEMPLATE_COMPONENTS STM 
	  JOIN 
	       SMC.V_SMC_AVAILABLE_COMPONENTS SAC 
	   ON 
	       STM.COMPONENT_ID = SAC.COMPONENT_ID
      WHERE 
          TEMPLATE_ID=#{templateId}
          ORDER BY
				DISPLAY_NAME
 	</select>
 	
 	<select id="getComponetsByRuleDefIds" resultType="int">
 	  SELECT
            DISTINCT SCVRD.COMPONENT_ID
      FROM  
            SMC_CMP_VISIBILITY_RULES_DEFINITION SCVRD
      WHERE 
            SCVRD.RULE_DEF_ID IN <foreach collection="ruleDefIds" item="ruleDefId" separator="," open='(' close=')'>#{ruleDefId}</foreach>
        
 	</select>
 	
 	

 	<select id="findTemplateExist"  resultType="int">
 		Select TEMPLATE_ID from SMC.SMC_TEMPLATE_MASTER WHERE PO_CATEGORY_ASSOC_ID=#{poCatAssID}
 	</select>
 	
 	<select id="getAllPoAssociationForAdd"  resultType="com.penske.apps.adminconsole.model.TemplatePoAssociation">
		SELECT CATEGORY || '/' || SUBCATEGORY as poCatSubCatDesc, ASSOC_ID as poCatAssocID FROM SMC.V_SMC_PO_CATEGORY_COMBINATIONS
		WHERE ASSOC_ID NOT IN (Select PO_CATEGORY_ASSOC_ID from SMC.SMC_TEMPLATE_MASTER where PO_CATEGORY_ASSOC_ID Is NOT NULL)
 	</select>
 	
 	<select id="getAllPoAssociationForEdit"  resultType="com.penske.apps.adminconsole.model.TemplatePoAssociation">
		  SELECT combinations.CATEGORY || '/' || combinations.SUBCATEGORY as poCatSubCatDesc, 
                 combinations.ASSOC_ID as poCatAssocID,
                 templateMaster.TEMPLATE_ID as templateId
            FROM SMC.V_SMC_PO_CATEGORY_COMBINATIONS combinations
                 INNER JOIN SMC.SMC_TEMPLATE_MASTER templateMaster
                 ON templateMaster.PO_CATEGORY_ASSOC_ID = combinations.ASSOC_ID
 	</select>
<!-- Template Page End -->	
		
  
  <!-- Component Management *****************************************************************************************-->
  <select id="loadAllAvailableComponents"  resultType="com.penske.apps.adminconsole.model.Component">
  	SELECT SGF.COMPONENT_GROUP, 
               SGF.SUB_GROUP, 
               SGF.SUB_COMPONENT_NAME, 
               SGF.COMPONENT_ID, 
  		   SGF.COMPONENT_GROUP_ID,
               SGF.COMPONENT_TYPE, 
               SGF.DISPLAY_SEQUENCE, 
               CASE WHEN CID.COMPONENT_ID IS NULL THEN 'FALSE' ELSE 'TRUE' END AS VISIBLE,
               CASE WHEN CID.ALLOW_DUPLICATES = 'Y' THEN 'TRUE' ELSE 'FALSE' END AS allowDuplicates 
          FROM CORP.VEHCMPSGF SGF
     LEFT JOIN SMC.SMC_COMPONENT_INFO_DETAILS CID
  		   ON SGF.COMPONENT_ID = CID.COMPONENT_ID
  </select>	
  
  <select id="getComponentInfoDetail" resultType="com.penske.apps.adminconsole.domain.ComponentInfoDetail">
    SELECT  COMPONENT_ID,
            DISPLAY_NAME,
            COMP_GROUP_ID,
            COMPONENT_TYPE,
            IS_VEHICLE_COMP AS vehicleComp,
            VISIBILITY,
            COMPONENT_SEQUENCE
       FROM SMC.SMC_COMPONENT_INFO_DETAILS 
      WHERE COMPONENT_ID = #{componentId}
  </select>
  
   <select id="getComponentGroup" resultType="com.penske.apps.adminconsole.domain.ComponentGroup">
    SELECT  COMP_GROUP_ID AS groupId,
            GROUP_NAME,
            GROUP_SEQUENCE,
            COMP_GRP_NUMBER AS groupNumber,
            COMP_SECTION_ID AS sectionId
       FROM SMC.SMC_COMPONENT_GROUPS
      WHERE COMP_GROUP_ID = #{groupId}
  </select>
	
  <insert id="copyCorpComponentRow">
    INSERT INTO SMC.SMC_COMPONENT_INFO_DETAILS 
                (
                  COMPONENT_ID,
                  DISPLAY_NAME,
                  COMP_GROUP_ID,
                  COMPONENT_TYPE,
                  IS_VEHICLE_COMP,
                  VISIBILITY,
                  ALLOW_DUPLICATES,
                  COMPONENT_SEQUENCE,
                  GEN_MISSING_COUNT
                )
         SELECT COMPONENT_ID,
                trim(COMPONENt_GROUP) || (case when sub_group != ' ' THEN ' '||trim(sub_group) else '' end) ||' '||trim( SUB_COMPONENT_NAME),
                COMPONENT_GROUP_ID,
                COMPONENT_TYPE,
                'N' AS IS_VEHICLE_COMP,
                'Y' AS VISIBILITY,
                'Y' AS ALLOW_DUPLICATES,
                DISPLAY_SEQUENCE, 
                'Y' AS GEN_MISSING_COUNT
           FROM CORP.VEHCMPSGF
          WHERE COMPONENT_ID = #{componentId}
  </insert>
  
  <insert id="copyCorpComponentGroupRow">
    INSERT INTO SMC.SMC_COMPONENT_GROUPS
                (
                  GROUP_NAME,
                  GROUP_SEQUENCE,
                  COMP_GRP_NUMBER,
                  COMP_SECTION_ID
                )
         SELECT COMPONENT_GROUP,
                (SELECT MAX(COMP_GROUP_ID) FROM SMC.SMC_COMPONENT_GROUPS) AS GROUP_SEQUENCE,
                COMPONENT_GROUP_ID,
                3 AS COMP_SECTION_ID
           FROM CORP.VEHCMPGRF
          WHERE COMPONENT_GROUP_ID = #{groupId}
  </insert>
  
   <update id="allowDuplicateComponents" >
		UPDATE SMC.SMC_COMPONENT_INFO_DETAILS CID 
		SET 
		<choose>
			<when test="allowDuplicates == true">CID.ALLOW_DUPLICATES = 'Y'</when>
			<otherwise>CID.ALLOW_DUPLICATES = 'N'</otherwise>
	          </choose> 
		WHERE 
		CID.COMPONENT_ID= #{componentId}
	</update>
    
</mapper>